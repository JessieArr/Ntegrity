Assembly: nunit.framework
Version: v2.6.4.14350
Targeting CLR Version: v2.0.50727

Referenced Assemblies:
mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089
System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089

CLASSES:
	public class NUnit.Framework.Assert
	CONSTRUCTORS:
	METHODS:
		[System.CLSCompliantAttribute]
		public Void AreEqual(UInt32, UInt32)
		[System.CLSCompliantAttribute]
		public Void AreEqual(UInt32, UInt32, System.String)
		[System.CLSCompliantAttribute]
		public Void AreEqual(UInt32, UInt32, System.String, System.Object[])
		[System.CLSCompliantAttribute]
		public Void AreEqual(UInt64, UInt64)
		[System.CLSCompliantAttribute]
		public Void AreEqual(UInt64, UInt64, System.String)
		[System.CLSCompliantAttribute]
		public Void AreEqual(UInt64, UInt64, System.String, System.Object[])
		[System.CLSCompliantAttribute]
		public Void AreNotEqual(UInt32, UInt32)
		[System.CLSCompliantAttribute]
		public Void AreNotEqual(UInt32, UInt32, System.String)
		[System.CLSCompliantAttribute]
		public Void AreNotEqual(UInt32, UInt32, System.String, System.Object[])
		[System.CLSCompliantAttribute]
		public Void AreNotEqual(UInt64, UInt64)
		[System.CLSCompliantAttribute]
		public Void AreNotEqual(UInt64, UInt64, System.String)
		[System.CLSCompliantAttribute]
		public Void AreNotEqual(UInt64, UInt64, System.String, System.Object[])
		[System.CLSCompliantAttribute]
		public Void Greater(UInt32, UInt32)
		[System.CLSCompliantAttribute]
		public Void Greater(UInt32, UInt32, System.String)
		[System.CLSCompliantAttribute]
		public Void Greater(UInt32, UInt32, System.String, System.Object[])
		[System.CLSCompliantAttribute]
		public Void Greater(UInt64, UInt64)
		[System.CLSCompliantAttribute]
		public Void Greater(UInt64, UInt64, System.String)
		[System.CLSCompliantAttribute]
		public Void Greater(UInt64, UInt64, System.String, System.Object[])
		[System.CLSCompliantAttribute]
		public Void GreaterOrEqual(UInt32, UInt32)
		[System.CLSCompliantAttribute]
		public Void GreaterOrEqual(UInt32, UInt32, System.String)
		[System.CLSCompliantAttribute]
		public Void GreaterOrEqual(UInt32, UInt32, System.String, System.Object[])
		[System.CLSCompliantAttribute]
		public Void GreaterOrEqual(UInt64, UInt64)
		[System.CLSCompliantAttribute]
		public Void GreaterOrEqual(UInt64, UInt64, System.String)
		[System.CLSCompliantAttribute]
		public Void GreaterOrEqual(UInt64, UInt64, System.String, System.Object[])
		[System.CLSCompliantAttribute]
		public Void Less(UInt32, UInt32)
		[System.CLSCompliantAttribute]
		public Void Less(UInt32, UInt32, System.String)
		[System.CLSCompliantAttribute]
		public Void Less(UInt32, UInt32, System.String, System.Object[])
		[System.CLSCompliantAttribute]
		public Void Less(UInt64, UInt64)
		[System.CLSCompliantAttribute]
		public Void Less(UInt64, UInt64, System.String)
		[System.CLSCompliantAttribute]
		public Void Less(UInt64, UInt64, System.String, System.Object[])
		[System.CLSCompliantAttribute]
		public Void LessOrEqual(UInt32, UInt32)
		[System.CLSCompliantAttribute]
		public Void LessOrEqual(UInt32, UInt32, System.String)
		[System.CLSCompliantAttribute]
		public Void LessOrEqual(UInt32, UInt32, System.String, System.Object[])
		[System.CLSCompliantAttribute]
		public Void LessOrEqual(UInt64, UInt64)
		[System.CLSCompliantAttribute]
		public Void LessOrEqual(UInt64, UInt64, System.String)
		[System.CLSCompliantAttribute]
		public Void LessOrEqual(UInt64, UInt64, System.String, System.Object[])
		[System.ComponentModel.EditorBrowsableAttribute]
		public Boolean Equals(System.Object, System.Object)
		[System.ObsoleteAttribute]
		public Void IsInstanceOfType(System.Type, System.Object)
		[System.ObsoleteAttribute]
		public Void IsInstanceOfType(System.Type, System.Object, System.String)
		[System.ObsoleteAttribute]
		public Void IsInstanceOfType(System.Type, System.Object, System.String, System.Object[])
		[System.ObsoleteAttribute]
		public Void IsNotInstanceOfType(System.Type, System.Object)
		[System.ObsoleteAttribute]
		public Void IsNotInstanceOfType(System.Type, System.Object, System.String)
		[System.ObsoleteAttribute]
		public Void IsNotInstanceOfType(System.Type, System.Object, System.String, System.Object[])
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.Exception Catch(NUnit.Framework.TestDelegate)
		public System.Exception Catch(NUnit.Framework.TestDelegate, System.String)
		public System.Exception Catch(NUnit.Framework.TestDelegate, System.String, System.Object[])
		public System.Exception Catch(System.Type, NUnit.Framework.TestDelegate)
		public System.Exception Catch(System.Type, NUnit.Framework.TestDelegate, System.String)
		public System.Exception Catch(System.Type, NUnit.Framework.TestDelegate, System.String, System.Object[])
		public System.Exception Throws(NUnit.Framework.Constraints.IResolveConstraint, NUnit.Framework.TestDelegate)
		public System.Exception Throws(NUnit.Framework.Constraints.IResolveConstraint, NUnit.Framework.TestDelegate, System.String)
		public System.Exception Throws(NUnit.Framework.Constraints.IResolveConstraint, NUnit.Framework.TestDelegate, System.String, System.Object[])
		public System.Exception Throws(System.Type, NUnit.Framework.TestDelegate)
		public System.Exception Throws(System.Type, NUnit.Framework.TestDelegate, System.String)
		public System.Exception Throws(System.Type, NUnit.Framework.TestDelegate, System.String, System.Object[])
		public System.String SystemObject.ToString()
		public T Catch[T](NUnit.Framework.TestDelegate)
		public T Catch[T](NUnit.Framework.TestDelegate, System.String)
		public T Catch[T](NUnit.Framework.TestDelegate, System.String, System.Object[])
		public T Throws[T](NUnit.Framework.TestDelegate)
		public T Throws[T](NUnit.Framework.TestDelegate, System.String)
		public T Throws[T](NUnit.Framework.TestDelegate, System.String, System.Object[])
		public Void AreEqual(Double, Double, Double)
		public Void AreEqual(Double, Double, Double, System.String)
		public Void AreEqual(Double, Double, Double, System.String, System.Object[])
		public Void AreEqual(Double, System.Nullable`1[System.Double], Double)
		public Void AreEqual(Double, System.Nullable`1[System.Double], Double, System.String)
		public Void AreEqual(Double, System.Nullable`1[System.Double], Double, System.String, System.Object[])
		public Void AreEqual(Int32, Int32)
		public Void AreEqual(Int32, Int32, System.String)
		public Void AreEqual(Int32, Int32, System.String, System.Object[])
		public Void AreEqual(Int64, Int64)
		public Void AreEqual(Int64, Int64, System.String)
		public Void AreEqual(Int64, Int64, System.String, System.Object[])
		public Void AreEqual(System.Decimal, System.Decimal)
		public Void AreEqual(System.Decimal, System.Decimal, System.String)
		public Void AreEqual(System.Decimal, System.Decimal, System.String, System.Object[])
		public Void AreEqual(System.Object, System.Object)
		public Void AreEqual(System.Object, System.Object, System.String)
		public Void AreEqual(System.Object, System.Object, System.String, System.Object[])
		public Void AreNotEqual(Double, Double)
		public Void AreNotEqual(Double, Double, System.String)
		public Void AreNotEqual(Double, Double, System.String, System.Object[])
		public Void AreNotEqual(Int32, Int32)
		public Void AreNotEqual(Int32, Int32, System.String)
		public Void AreNotEqual(Int32, Int32, System.String, System.Object[])
		public Void AreNotEqual(Int64, Int64)
		public Void AreNotEqual(Int64, Int64, System.String)
		public Void AreNotEqual(Int64, Int64, System.String, System.Object[])
		public Void AreNotEqual(Single, Single)
		public Void AreNotEqual(Single, Single, System.String)
		public Void AreNotEqual(Single, Single, System.String, System.Object[])
		public Void AreNotEqual(System.Decimal, System.Decimal)
		public Void AreNotEqual(System.Decimal, System.Decimal, System.String)
		public Void AreNotEqual(System.Decimal, System.Decimal, System.String, System.Object[])
		public Void AreNotEqual(System.Object, System.Object)
		public Void AreNotEqual(System.Object, System.Object, System.String)
		public Void AreNotEqual(System.Object, System.Object, System.String, System.Object[])
		public Void AreNotSame(System.Object, System.Object)
		public Void AreNotSame(System.Object, System.Object, System.String)
		public Void AreNotSame(System.Object, System.Object, System.String, System.Object[])
		public Void AreSame(System.Object, System.Object)
		public Void AreSame(System.Object, System.Object, System.String)
		public Void AreSame(System.Object, System.Object, System.String, System.Object[])
		public Void ByVal(System.Object, NUnit.Framework.Constraints.IResolveConstraint)
		public Void ByVal(System.Object, NUnit.Framework.Constraints.IResolveConstraint, System.String)
		public Void ByVal(System.Object, NUnit.Framework.Constraints.IResolveConstraint, System.String, System.Object[])
		public Void Contains(System.Object, System.Collections.ICollection)
		public Void Contains(System.Object, System.Collections.ICollection, System.String)
		public Void Contains(System.Object, System.Collections.ICollection, System.String, System.Object[])
		public Void DoesNotThrow(NUnit.Framework.TestDelegate)
		public Void DoesNotThrow(NUnit.Framework.TestDelegate, System.String)
		public Void DoesNotThrow(NUnit.Framework.TestDelegate, System.String, System.Object[])
		public Void Fail()
		public Void Fail(System.String)
		public Void Fail(System.String, System.Object[])
		public Void False(Boolean)
		public Void False(Boolean, System.String)
		public Void False(Boolean, System.String, System.Object[])
		public Void Greater(Double, Double)
		public Void Greater(Double, Double, System.String)
		public Void Greater(Double, Double, System.String, System.Object[])
		public Void Greater(Int32, Int32)
		public Void Greater(Int32, Int32, System.String)
		public Void Greater(Int32, Int32, System.String, System.Object[])
		public Void Greater(Int64, Int64)
		public Void Greater(Int64, Int64, System.String)
		public Void Greater(Int64, Int64, System.String, System.Object[])
		public Void Greater(Single, Single)
		public Void Greater(Single, Single, System.String)
		public Void Greater(Single, Single, System.String, System.Object[])
		public Void Greater(System.Decimal, System.Decimal)
		public Void Greater(System.Decimal, System.Decimal, System.String)
		public Void Greater(System.Decimal, System.Decimal, System.String, System.Object[])
		public Void Greater(System.IComparable, System.IComparable)
		public Void Greater(System.IComparable, System.IComparable, System.String)
		public Void Greater(System.IComparable, System.IComparable, System.String, System.Object[])
		public Void GreaterOrEqual(Double, Double)
		public Void GreaterOrEqual(Double, Double, System.String)
		public Void GreaterOrEqual(Double, Double, System.String, System.Object[])
		public Void GreaterOrEqual(Int32, Int32)
		public Void GreaterOrEqual(Int32, Int32, System.String)
		public Void GreaterOrEqual(Int32, Int32, System.String, System.Object[])
		public Void GreaterOrEqual(Int64, Int64)
		public Void GreaterOrEqual(Int64, Int64, System.String)
		public Void GreaterOrEqual(Int64, Int64, System.String, System.Object[])
		public Void GreaterOrEqual(Single, Single)
		public Void GreaterOrEqual(Single, Single, System.String)
		public Void GreaterOrEqual(Single, Single, System.String, System.Object[])
		public Void GreaterOrEqual(System.Decimal, System.Decimal)
		public Void GreaterOrEqual(System.Decimal, System.Decimal, System.String)
		public Void GreaterOrEqual(System.Decimal, System.Decimal, System.String, System.Object[])
		public Void GreaterOrEqual(System.IComparable, System.IComparable)
		public Void GreaterOrEqual(System.IComparable, System.IComparable, System.String)
		public Void GreaterOrEqual(System.IComparable, System.IComparable, System.String, System.Object[])
		public Void Ignore()
		public Void Ignore(System.String)
		public Void Ignore(System.String, System.Object[])
		public Void Inconclusive()
		public Void Inconclusive(System.String)
		public Void Inconclusive(System.String, System.Object[])
		public Void IsAssignableFrom(System.Type, System.Object)
		public Void IsAssignableFrom(System.Type, System.Object, System.String)
		public Void IsAssignableFrom(System.Type, System.Object, System.String, System.Object[])
		public Void IsAssignableFrom[T](System.Object)
		public Void IsAssignableFrom[T](System.Object, System.String)
		public Void IsAssignableFrom[T](System.Object, System.String, System.Object[])
		public Void IsEmpty(System.Collections.IEnumerable)
		public Void IsEmpty(System.Collections.IEnumerable, System.String)
		public Void IsEmpty(System.Collections.IEnumerable, System.String, System.Object[])
		public Void IsEmpty(System.String)
		public Void IsEmpty(System.String, System.String)
		public Void IsEmpty(System.String, System.String, System.Object[])
		public Void IsFalse(Boolean)
		public Void IsFalse(Boolean, System.String)
		public Void IsFalse(Boolean, System.String, System.Object[])
		public Void IsInstanceOf(System.Type, System.Object)
		public Void IsInstanceOf(System.Type, System.Object, System.String)
		public Void IsInstanceOf(System.Type, System.Object, System.String, System.Object[])
		public Void IsInstanceOf[T](System.Object)
		public Void IsInstanceOf[T](System.Object, System.String)
		public Void IsInstanceOf[T](System.Object, System.String, System.Object[])
		public Void IsNaN(Double)
		public Void IsNaN(Double, System.String)
		public Void IsNaN(Double, System.String, System.Object[])
		public Void IsNaN(System.Nullable`1[System.Double])
		public Void IsNaN(System.Nullable`1[System.Double], System.String)
		public Void IsNaN(System.Nullable`1[System.Double], System.String, System.Object[])
		public Void IsNotAssignableFrom(System.Type, System.Object)
		public Void IsNotAssignableFrom(System.Type, System.Object, System.String)
		public Void IsNotAssignableFrom(System.Type, System.Object, System.String, System.Object[])
		public Void IsNotAssignableFrom[T](System.Object)
		public Void IsNotAssignableFrom[T](System.Object, System.String)
		public Void IsNotAssignableFrom[T](System.Object, System.String, System.Object[])
		public Void IsNotEmpty(System.Collections.IEnumerable)
		public Void IsNotEmpty(System.Collections.IEnumerable, System.String)
		public Void IsNotEmpty(System.Collections.IEnumerable, System.String, System.Object[])
		public Void IsNotEmpty(System.String)
		public Void IsNotEmpty(System.String, System.String)
		public Void IsNotEmpty(System.String, System.String, System.Object[])
		public Void IsNotInstanceOf(System.Type, System.Object)
		public Void IsNotInstanceOf(System.Type, System.Object, System.String)
		public Void IsNotInstanceOf(System.Type, System.Object, System.String, System.Object[])
		public Void IsNotInstanceOf[T](System.Object)
		public Void IsNotInstanceOf[T](System.Object, System.String)
		public Void IsNotInstanceOf[T](System.Object, System.String, System.Object[])
		public Void IsNotNull(System.Object)
		public Void IsNotNull(System.Object, System.String)
		public Void IsNotNull(System.Object, System.String, System.Object[])
		public Void IsNotNullOrEmpty(System.String)
		public Void IsNotNullOrEmpty(System.String, System.String)
		public Void IsNotNullOrEmpty(System.String, System.String, System.Object[])
		public Void IsNull(System.Object)
		public Void IsNull(System.Object, System.String)
		public Void IsNull(System.Object, System.String, System.Object[])
		public Void IsNullOrEmpty(System.String)
		public Void IsNullOrEmpty(System.String, System.String)
		public Void IsNullOrEmpty(System.String, System.String, System.Object[])
		public Void IsTrue(Boolean)
		public Void IsTrue(Boolean, System.String)
		public Void IsTrue(Boolean, System.String, System.Object[])
		public Void Less(Double, Double)
		public Void Less(Double, Double, System.String)
		public Void Less(Double, Double, System.String, System.Object[])
		public Void Less(Int32, Int32)
		public Void Less(Int32, Int32, System.String)
		public Void Less(Int32, Int32, System.String, System.Object[])
		public Void Less(Int64, Int64)
		public Void Less(Int64, Int64, System.String)
		public Void Less(Int64, Int64, System.String, System.Object[])
		public Void Less(Single, Single)
		public Void Less(Single, Single, System.String)
		public Void Less(Single, Single, System.String, System.Object[])
		public Void Less(System.Decimal, System.Decimal)
		public Void Less(System.Decimal, System.Decimal, System.String)
		public Void Less(System.Decimal, System.Decimal, System.String, System.Object[])
		public Void Less(System.IComparable, System.IComparable)
		public Void Less(System.IComparable, System.IComparable, System.String)
		public Void Less(System.IComparable, System.IComparable, System.String, System.Object[])
		public Void LessOrEqual(Double, Double)
		public Void LessOrEqual(Double, Double, System.String)
		public Void LessOrEqual(Double, Double, System.String, System.Object[])
		public Void LessOrEqual(Int32, Int32)
		public Void LessOrEqual(Int32, Int32, System.String)
		public Void LessOrEqual(Int32, Int32, System.String, System.Object[])
		public Void LessOrEqual(Int64, Int64)
		public Void LessOrEqual(Int64, Int64, System.String)
		public Void LessOrEqual(Int64, Int64, System.String, System.Object[])
		public Void LessOrEqual(Single, Single)
		public Void LessOrEqual(Single, Single, System.String)
		public Void LessOrEqual(Single, Single, System.String, System.Object[])
		public Void LessOrEqual(System.Decimal, System.Decimal)
		public Void LessOrEqual(System.Decimal, System.Decimal, System.String)
		public Void LessOrEqual(System.Decimal, System.Decimal, System.String, System.Object[])
		public Void LessOrEqual(System.IComparable, System.IComparable)
		public Void LessOrEqual(System.IComparable, System.IComparable, System.String)
		public Void LessOrEqual(System.IComparable, System.IComparable, System.String, System.Object[])
		public Void NotNull(System.Object)
		public Void NotNull(System.Object, System.String)
		public Void NotNull(System.Object, System.String, System.Object[])
		public Void Null(System.Object)
		public Void Null(System.Object, System.String)
		public Void Null(System.Object, System.String, System.Object[])
		public Void Pass()
		public Void Pass(System.String)
		public Void Pass(System.String, System.Object[])
		public Void ReferenceEquals(System.Object, System.Object)
		public Void That(Boolean)
		public Void That(Boolean, System.String)
		public Void That(Boolean, System.String, System.Object[])
		public Void That(NUnit.Framework.TestDelegate, NUnit.Framework.Constraints.IResolveConstraint)
		public Void That(System.Object, NUnit.Framework.Constraints.IResolveConstraint)
		public Void That(System.Object, NUnit.Framework.Constraints.IResolveConstraint, System.String)
		public Void That(System.Object, NUnit.Framework.Constraints.IResolveConstraint, System.String, System.Object[])
		public Void That[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T], NUnit.Framework.Constraints.IResolveConstraint)
		public Void That[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T], NUnit.Framework.Constraints.IResolveConstraint, System.String)
		public Void That[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T], NUnit.Framework.Constraints.IResolveConstraint, System.String, System.Object[])
		public Void That[T](T ByRef, NUnit.Framework.Constraints.IResolveConstraint)
		public Void That[T](T ByRef, NUnit.Framework.Constraints.IResolveConstraint, System.String)
		public Void That[T](T ByRef, NUnit.Framework.Constraints.IResolveConstraint, System.String, System.Object[])
		public Void True(Boolean)
		public Void True(Boolean, System.String)
		public Void True(Boolean, System.String, System.Object[])

	[System.SerializableAttribute]
	public class NUnit.Framework.AssertionException
	INHERITS:
		System.Exception
	IMPLEMENTS:
		System.Runtime.Serialization.ISerializable
		System.Runtime.InteropServices._Exception
	CONSTRUCTORS:
		public Void .ctor(System.String)
		public Void .ctor(System.String, System.Exception)
	METHODS:
		[System.Security.SecurityCriticalAttribute]
		public Void SystemException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.Exception SystemException.GetBaseException()
		public System.String SystemException.ToString()
		public System.Type SystemException.GetType()
	PROPERTIES:
		Int32 HResult { public get; }
		System.Collections.IDictionary Data { public get; }
		System.Exception InnerException { public get; }
		System.Reflection.MethodBase TargetSite { public get; }
		System.String HelpLink { public get; public set; }
		System.String Message { public get; }
		System.String Source { public get; public set; }
		System.String StackTrace { public get; }

	public class NUnit.Framework.AssertionHelper
	INHERITS:
		NUnit.Framework.Constraints.ConstraintFactory
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.ObsoleteAttribute]
		public NUnit.Framework.Constraints.InstanceOfTypeConstraint NUnit.Framework.ConstraintsConstraintFactory.InstanceOfType(System.Type)
		[System.ObsoleteAttribute]
		public NUnit.Framework.Constraints.InstanceOfTypeConstraint NUnit.Framework.ConstraintsConstraintFactory.InstanceOfType[T]()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.AssignableFromConstraint NUnit.Framework.ConstraintsConstraintFactory.AssignableFrom(System.Type)
		public NUnit.Framework.Constraints.AssignableFromConstraint NUnit.Framework.ConstraintsConstraintFactory.AssignableFrom[T]()
		public NUnit.Framework.Constraints.AssignableToConstraint NUnit.Framework.ConstraintsConstraintFactory.AssignableTo(System.Type)
		public NUnit.Framework.Constraints.AssignableToConstraint NUnit.Framework.ConstraintsConstraintFactory.AssignableTo[T]()
		public NUnit.Framework.Constraints.CollectionContainsConstraint NUnit.Framework.ConstraintsConstraintFactory.Contains(System.Object)
		public NUnit.Framework.Constraints.CollectionContainsConstraint NUnit.Framework.ConstraintsConstraintFactory.Member(System.Object)
		public NUnit.Framework.Constraints.CollectionEquivalentConstraint NUnit.Framework.ConstraintsConstraintFactory.EquivalentTo(System.Collections.IEnumerable)
		public NUnit.Framework.Constraints.CollectionSubsetConstraint NUnit.Framework.ConstraintsConstraintFactory.SubsetOf(System.Collections.IEnumerable)
		public NUnit.Framework.Constraints.ContainsConstraint NUnit.Framework.ConstraintsConstraintFactory.Contains(System.String)
		public NUnit.Framework.Constraints.EndsWithConstraint NUnit.Framework.ConstraintsConstraintFactory.DoesNotEndWith(System.String)
		public NUnit.Framework.Constraints.EndsWithConstraint NUnit.Framework.ConstraintsConstraintFactory.EndsWith(System.String)
		public NUnit.Framework.Constraints.EndsWithConstraint NUnit.Framework.ConstraintsConstraintFactory.StringEnding(System.String)
		public NUnit.Framework.Constraints.EqualConstraint NUnit.Framework.ConstraintsConstraintFactory.EqualTo(System.Object)
		public NUnit.Framework.Constraints.ExactTypeConstraint NUnit.Framework.ConstraintsConstraintFactory.TypeOf(System.Type)
		public NUnit.Framework.Constraints.ExactTypeConstraint NUnit.Framework.ConstraintsConstraintFactory.TypeOf[T]()
		public NUnit.Framework.Constraints.GreaterThanConstraint NUnit.Framework.ConstraintsConstraintFactory.GreaterThan(System.Object)
		public NUnit.Framework.Constraints.GreaterThanOrEqualConstraint NUnit.Framework.ConstraintsConstraintFactory.AtLeast(System.Object)
		public NUnit.Framework.Constraints.GreaterThanOrEqualConstraint NUnit.Framework.ConstraintsConstraintFactory.GreaterThanOrEqualTo(System.Object)
		public NUnit.Framework.Constraints.InstanceOfTypeConstraint NUnit.Framework.ConstraintsConstraintFactory.InstanceOf(System.Type)
		public NUnit.Framework.Constraints.InstanceOfTypeConstraint NUnit.Framework.ConstraintsConstraintFactory.InstanceOf[T]()
		public NUnit.Framework.Constraints.LessThanConstraint NUnit.Framework.ConstraintsConstraintFactory.LessThan(System.Object)
		public NUnit.Framework.Constraints.LessThanOrEqualConstraint NUnit.Framework.ConstraintsConstraintFactory.AtMost(System.Object)
		public NUnit.Framework.Constraints.LessThanOrEqualConstraint NUnit.Framework.ConstraintsConstraintFactory.LessThanOrEqualTo(System.Object)
		public NUnit.Framework.Constraints.RangeConstraint`1[T] NUnit.Framework.ConstraintsConstraintFactory.InRange[T](T, T)
		public NUnit.Framework.Constraints.RegexConstraint NUnit.Framework.ConstraintsConstraintFactory.DoesNotMatch(System.String)
		public NUnit.Framework.Constraints.RegexConstraint NUnit.Framework.ConstraintsConstraintFactory.Matches(System.String)
		public NUnit.Framework.Constraints.RegexConstraint NUnit.Framework.ConstraintsConstraintFactory.StringMatching(System.String)
		public NUnit.Framework.Constraints.ResolvableConstraintExpression NUnit.Framework.ConstraintsConstraintFactory.Attribute(System.Type)
		public NUnit.Framework.Constraints.ResolvableConstraintExpression NUnit.Framework.ConstraintsConstraintFactory.Attribute[T]()
		public NUnit.Framework.Constraints.ResolvableConstraintExpression NUnit.Framework.ConstraintsConstraintFactory.Property(System.String)
		public NUnit.Framework.Constraints.SameAsConstraint NUnit.Framework.ConstraintsConstraintFactory.SameAs(System.Object)
		public NUnit.Framework.Constraints.SamePathConstraint NUnit.Framework.ConstraintsConstraintFactory.SamePath(System.String)
		public NUnit.Framework.Constraints.SamePathOrUnderConstraint NUnit.Framework.ConstraintsConstraintFactory.SamePathOrUnder(System.String)
		public NUnit.Framework.Constraints.StartsWithConstraint NUnit.Framework.ConstraintsConstraintFactory.DoesNotStartWith(System.String)
		public NUnit.Framework.Constraints.StartsWithConstraint NUnit.Framework.ConstraintsConstraintFactory.StartsWith(System.String)
		public NUnit.Framework.Constraints.StartsWithConstraint NUnit.Framework.ConstraintsConstraintFactory.StringStarting(System.String)
		public NUnit.Framework.Constraints.SubPathConstraint NUnit.Framework.ConstraintsConstraintFactory.SubPath(System.String)
		public NUnit.Framework.Constraints.SubstringConstraint NUnit.Framework.ConstraintsConstraintFactory.ContainsSubstring(System.String)
		public NUnit.Framework.Constraints.SubstringConstraint NUnit.Framework.ConstraintsConstraintFactory.DoesNotContain(System.String)
		public NUnit.Framework.Constraints.SubstringConstraint NUnit.Framework.ConstraintsConstraintFactory.StringContaining(System.String)
		public NUnit.Framework.ListMapper Map(System.Collections.ICollection)
		public System.String SystemObject.ToString()
		public Void Expect(Boolean)
		public Void Expect(Boolean, System.String)
		public Void Expect(Boolean, System.String, System.Object[])
		public Void Expect(NUnit.Framework.TestDelegate, NUnit.Framework.Constraints.IResolveConstraint)
		public Void Expect(System.Object, NUnit.Framework.Constraints.IResolveConstraint)
		public Void Expect(System.Object, NUnit.Framework.Constraints.IResolveConstraint, System.String)
		public Void Expect(System.Object, NUnit.Framework.Constraints.IResolveConstraint, System.String, System.Object[])
		public Void Expect[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T], NUnit.Framework.Constraints.IResolveConstraint)
		public Void Expect[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T], NUnit.Framework.Constraints.IResolveConstraint, System.String)
		public Void Expect[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T], NUnit.Framework.Constraints.IResolveConstraint, System.String, System.Object[])
		public Void Expect[T](T ByRef, NUnit.Framework.Constraints.IResolveConstraint)
		public Void Expect[T](T ByRef, NUnit.Framework.Constraints.IResolveConstraint, System.String)
		public Void Expect[T](T ByRef, NUnit.Framework.Constraints.IResolveConstraint, System.String, System.Object[])
	PROPERTIES:
		NUnit.Framework.Constraints.BinarySerializableConstraint BinarySerializable { public get; }
		NUnit.Framework.Constraints.CollectionOrderedConstraint Ordered { public get; }
		NUnit.Framework.Constraints.ConstraintExpression All { public get; }
		NUnit.Framework.Constraints.ConstraintExpression No { public get; }
		NUnit.Framework.Constraints.ConstraintExpression None { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Not { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Some { public get; }
		NUnit.Framework.Constraints.EmptyConstraint Empty { public get; }
		NUnit.Framework.Constraints.FalseConstraint False { public get; }
		NUnit.Framework.Constraints.GreaterThanConstraint Positive { public get; }
		NUnit.Framework.Constraints.LessThanConstraint Negative { public get; }
		NUnit.Framework.Constraints.NaNConstraint NaN { public get; }
		NUnit.Framework.Constraints.NullConstraint Null { public get; }
		NUnit.Framework.Constraints.ResolvableConstraintExpression Count { public get; }
		NUnit.Framework.Constraints.ResolvableConstraintExpression InnerException { public get; }
		NUnit.Framework.Constraints.ResolvableConstraintExpression Length { public get; }
		NUnit.Framework.Constraints.ResolvableConstraintExpression Message { public get; }
		NUnit.Framework.Constraints.TrueConstraint True { public get; }
		NUnit.Framework.Constraints.UniqueItemsConstraint Unique { public get; }
		NUnit.Framework.Constraints.XmlSerializableConstraint XmlSerializable { public get; }

	public class NUnit.Framework.Assume
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.ComponentModel.EditorBrowsableAttribute]
		public Boolean Equals(System.Object, System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()
		public Void ReferenceEquals(System.Object, System.Object)
		public Void That(Boolean)
		public Void That(Boolean, System.String)
		public Void That(Boolean, System.String, System.Object[])
		public Void That(NUnit.Framework.TestDelegate, NUnit.Framework.Constraints.IResolveConstraint)
		public Void That(System.Object, NUnit.Framework.Constraints.IResolveConstraint)
		public Void That(System.Object, NUnit.Framework.Constraints.IResolveConstraint, System.String)
		public Void That(System.Object, NUnit.Framework.Constraints.IResolveConstraint, System.String, System.Object[])
		public Void That[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T], NUnit.Framework.Constraints.IResolveConstraint)
		public Void That[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T], NUnit.Framework.Constraints.IResolveConstraint, System.String)
		public Void That[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T], NUnit.Framework.Constraints.IResolveConstraint, System.String, System.Object[])
		public Void That[T](T ByRef, NUnit.Framework.Constraints.IResolveConstraint)
		public Void That[T](T ByRef, NUnit.Framework.Constraints.IResolveConstraint, System.String)
		public Void That[T](T ByRef, NUnit.Framework.Constraints.IResolveConstraint, System.String, System.Object[])

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.CategoryAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor(System.String)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }
		System.String Name { public get; }

	public class NUnit.Framework.CollectionAssert
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.ComponentModel.EditorBrowsableAttribute]
		public Boolean Equals(System.Object, System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()
		public Void AllItemsAreInstancesOfType(System.Collections.IEnumerable, System.Type)
		public Void AllItemsAreInstancesOfType(System.Collections.IEnumerable, System.Type, System.String)
		public Void AllItemsAreInstancesOfType(System.Collections.IEnumerable, System.Type, System.String, System.Object[])
		public Void AllItemsAreNotNull(System.Collections.IEnumerable)
		public Void AllItemsAreNotNull(System.Collections.IEnumerable, System.String)
		public Void AllItemsAreNotNull(System.Collections.IEnumerable, System.String, System.Object[])
		public Void AllItemsAreUnique(System.Collections.IEnumerable)
		public Void AllItemsAreUnique(System.Collections.IEnumerable, System.String)
		public Void AllItemsAreUnique(System.Collections.IEnumerable, System.String, System.Object[])
		public Void AreEqual(System.Collections.IEnumerable, System.Collections.IEnumerable)
		public Void AreEqual(System.Collections.IEnumerable, System.Collections.IEnumerable, System.Collections.IComparer)
		public Void AreEqual(System.Collections.IEnumerable, System.Collections.IEnumerable, System.Collections.IComparer, System.String)
		public Void AreEqual(System.Collections.IEnumerable, System.Collections.IEnumerable, System.Collections.IComparer, System.String, System.Object[])
		public Void AreEqual(System.Collections.IEnumerable, System.Collections.IEnumerable, System.String)
		public Void AreEqual(System.Collections.IEnumerable, System.Collections.IEnumerable, System.String, System.Object[])
		public Void AreEquivalent(System.Collections.IEnumerable, System.Collections.IEnumerable)
		public Void AreEquivalent(System.Collections.IEnumerable, System.Collections.IEnumerable, System.String)
		public Void AreEquivalent(System.Collections.IEnumerable, System.Collections.IEnumerable, System.String, System.Object[])
		public Void AreNotEqual(System.Collections.IEnumerable, System.Collections.IEnumerable)
		public Void AreNotEqual(System.Collections.IEnumerable, System.Collections.IEnumerable, System.Collections.IComparer)
		public Void AreNotEqual(System.Collections.IEnumerable, System.Collections.IEnumerable, System.Collections.IComparer, System.String)
		public Void AreNotEqual(System.Collections.IEnumerable, System.Collections.IEnumerable, System.Collections.IComparer, System.String, System.Object[])
		public Void AreNotEqual(System.Collections.IEnumerable, System.Collections.IEnumerable, System.String)
		public Void AreNotEqual(System.Collections.IEnumerable, System.Collections.IEnumerable, System.String, System.Object[])
		public Void AreNotEquivalent(System.Collections.IEnumerable, System.Collections.IEnumerable)
		public Void AreNotEquivalent(System.Collections.IEnumerable, System.Collections.IEnumerable, System.String)
		public Void AreNotEquivalent(System.Collections.IEnumerable, System.Collections.IEnumerable, System.String, System.Object[])
		public Void Contains(System.Collections.IEnumerable, System.Object)
		public Void Contains(System.Collections.IEnumerable, System.Object, System.String)
		public Void Contains(System.Collections.IEnumerable, System.Object, System.String, System.Object[])
		public Void DoesNotContain(System.Collections.IEnumerable, System.Object)
		public Void DoesNotContain(System.Collections.IEnumerable, System.Object, System.String)
		public Void DoesNotContain(System.Collections.IEnumerable, System.Object, System.String, System.Object[])
		public Void IsEmpty(System.Collections.IEnumerable)
		public Void IsEmpty(System.Collections.IEnumerable, System.String)
		public Void IsEmpty(System.Collections.IEnumerable, System.String, System.Object[])
		public Void IsNotEmpty(System.Collections.IEnumerable)
		public Void IsNotEmpty(System.Collections.IEnumerable, System.String)
		public Void IsNotEmpty(System.Collections.IEnumerable, System.String, System.Object[])
		public Void IsNotSubsetOf(System.Collections.IEnumerable, System.Collections.IEnumerable)
		public Void IsNotSubsetOf(System.Collections.IEnumerable, System.Collections.IEnumerable, System.String)
		public Void IsNotSubsetOf(System.Collections.IEnumerable, System.Collections.IEnumerable, System.String, System.Object[])
		public Void IsOrdered(System.Collections.IEnumerable)
		public Void IsOrdered(System.Collections.IEnumerable, System.Collections.IComparer)
		public Void IsOrdered(System.Collections.IEnumerable, System.Collections.IComparer, System.String)
		public Void IsOrdered(System.Collections.IEnumerable, System.Collections.IComparer, System.String, System.Object[])
		public Void IsOrdered(System.Collections.IEnumerable, System.String)
		public Void IsOrdered(System.Collections.IEnumerable, System.String, System.Object[])
		public Void IsSubsetOf(System.Collections.IEnumerable, System.Collections.IEnumerable)
		public Void IsSubsetOf(System.Collections.IEnumerable, System.Collections.IEnumerable, System.String)
		public Void IsSubsetOf(System.Collections.IEnumerable, System.Collections.IEnumerable, System.String, System.Object[])
		public Void ReferenceEquals(System.Object, System.Object)

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.CombinatorialAttribute
	INHERITS:
		NUnit.Framework.PropertyAttribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Collections.IDictionary Properties { public get; }
		System.Object TypeId { public get; }

	public sealed class NUnit.Framework.Constraints.ActualValueDelegate`1
	INHERITS:
		System.MulticastDelegate
	IMPLEMENTS:
		System.ICloneable
		System.Runtime.Serialization.ISerializable
	CONSTRUCTORS:
		public Void .ctor(System.Object, IntPtr)
	METHODS:
		[System.Security.SecurityCriticalAttribute]
		public Void SystemMulticastDelegate.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemMulticastDelegate.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemMulticastDelegate.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Delegate[] SystemMulticastDelegate.GetInvocationList()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public System.IAsyncResult BeginInvoke(System.AsyncCallback, System.Object)
		public System.Object SystemDelegate.Clone()
		public System.Object SystemDelegate.DynamicInvoke(System.Object[])
		public System.String SystemObject.ToString()
		public T EndInvoke(System.IAsyncResult)
		public T Invoke()
	PROPERTIES:
		System.Object Target { public get; }
		System.Reflection.MethodInfo Method { public get; }

	public class NUnit.Framework.Constraints.AllItemsConstraint
	INHERITS:
		NUnit.Framework.Constraints.PrefixConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(NUnit.Framework.Constraints.Constraint)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.AllOperator
	INHERITS:
		NUnit.Framework.Constraints.CollectionOperator
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.Constraint ApplyPrefix(NUnit.Framework.Constraints.Constraint)
		public System.String SystemObject.ToString()
		public Void NUnit.Framework.ConstraintsPrefixOperator.Reduce(ConstraintStack)
	PROPERTIES:
		Int32 LeftPrecedence { public get; }
		Int32 RightPrecedence { public get; }
		System.Object LeftContext { public get; public set; }
		System.Object RightContext { public get; public set; }

	public class NUnit.Framework.Constraints.AndConstraint
	INHERITS:
		NUnit.Framework.Constraints.BinaryConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(NUnit.Framework.Constraints.Constraint, NUnit.Framework.Constraints.Constraint)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.AndOperator
	INHERITS:
		NUnit.Framework.Constraints.BinaryOperator
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.Constraint ApplyOperator(NUnit.Framework.Constraints.Constraint, NUnit.Framework.Constraints.Constraint)
		public System.String SystemObject.ToString()
		public Void NUnit.Framework.ConstraintsBinaryOperator.Reduce(ConstraintStack)
	PROPERTIES:
		Int32 LeftPrecedence { public get; }
		Int32 RightPrecedence { public get; }
		System.Object LeftContext { public get; public set; }
		System.Object RightContext { public get; public set; }

	public class NUnit.Framework.Constraints.AssignableFromConstraint
	INHERITS:
		NUnit.Framework.Constraints.TypeConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.Type)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsTypeConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.AssignableToConstraint
	INHERITS:
		NUnit.Framework.Constraints.TypeConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.Type)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsTypeConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.AttributeConstraint
	INHERITS:
		NUnit.Framework.Constraints.PrefixConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.Type, NUnit.Framework.Constraints.Constraint)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.AttributeExistsConstraint
	INHERITS:
		NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.Type)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.AttributeOperator
	INHERITS:
		NUnit.Framework.Constraints.SelfResolvingOperator
	CONSTRUCTORS:
		public Void .ctor(System.Type)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()
		public Void Reduce(ConstraintStack)
	PROPERTIES:
		Int32 LeftPrecedence { public get; }
		Int32 RightPrecedence { public get; }
		System.Object LeftContext { public get; public set; }
		System.Object RightContext { public get; public set; }

	public abstract class NUnit.Framework.Constraints.BasicConstraint
	INHERITS:
		NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public abstract class NUnit.Framework.Constraints.BinaryConstraint
	INHERITS:
		NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public abstract class NUnit.Framework.Constraints.BinaryOperator
	INHERITS:
		NUnit.Framework.Constraints.ConstraintOperator
	CONSTRUCTORS:
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.Constraint ApplyOperator(NUnit.Framework.Constraints.Constraint, NUnit.Framework.Constraints.Constraint)
		public System.String SystemObject.ToString()
		public Void Reduce(ConstraintStack)
	PROPERTIES:
		Int32 LeftPrecedence { public get; }
		Int32 RightPrecedence { public get; }
		System.Object LeftContext { public get; public set; }
		System.Object RightContext { public get; public set; }

	public class NUnit.Framework.Constraints.BinarySerializableConstraint
	INHERITS:
		NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public abstract class NUnit.Framework.Constraints.CollectionConstraint
	INHERITS:
		NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.CollectionContainsConstraint
	INHERITS:
		NUnit.Framework.Constraints.CollectionItemsEqualConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.Object)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean NUnit.Framework.ConstraintsCollectionConstraint.Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint NUnit.Framework.ConstraintsCollectionItemsEqualConstraint.Using(System.Collections.IComparer)
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint NUnit.Framework.ConstraintsCollectionItemsEqualConstraint.Using(System.Collections.IEqualityComparer)
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint NUnit.Framework.ConstraintsCollectionItemsEqualConstraint.Using[T](System.Collections.Generic.IComparer`1[T])
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint NUnit.Framework.ConstraintsCollectionItemsEqualConstraint.Using[T](System.Collections.Generic.IEqualityComparer`1[T])
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint NUnit.Framework.ConstraintsCollectionItemsEqualConstraint.Using[T](System.Comparison`1[T])
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.CollectionItemsEqualConstraint IgnoreCase { public get; }
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.CollectionEquivalentConstraint
	INHERITS:
		NUnit.Framework.Constraints.CollectionItemsEqualConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.Collections.IEnumerable)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean NUnit.Framework.ConstraintsCollectionConstraint.Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint NUnit.Framework.ConstraintsCollectionItemsEqualConstraint.Using(System.Collections.IComparer)
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint NUnit.Framework.ConstraintsCollectionItemsEqualConstraint.Using(System.Collections.IEqualityComparer)
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint NUnit.Framework.ConstraintsCollectionItemsEqualConstraint.Using[T](System.Collections.Generic.IComparer`1[T])
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint NUnit.Framework.ConstraintsCollectionItemsEqualConstraint.Using[T](System.Collections.Generic.IEqualityComparer`1[T])
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint NUnit.Framework.ConstraintsCollectionItemsEqualConstraint.Using[T](System.Comparison`1[T])
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.CollectionItemsEqualConstraint IgnoreCase { public get; }
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public abstract class NUnit.Framework.Constraints.CollectionItemsEqualConstraint
	INHERITS:
		NUnit.Framework.Constraints.CollectionConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean NUnit.Framework.ConstraintsCollectionConstraint.Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint Using(System.Collections.IComparer)
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint Using(System.Collections.IEqualityComparer)
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint Using[T](System.Collections.Generic.IComparer`1[T])
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint Using[T](System.Collections.Generic.IEqualityComparer`1[T])
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint Using[T](System.Comparison`1[T])
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.CollectionItemsEqualConstraint IgnoreCase { public get; }
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public abstract class NUnit.Framework.Constraints.CollectionOperator
	INHERITS:
		NUnit.Framework.Constraints.PrefixOperator
	CONSTRUCTORS:
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.Constraint NUnit.Framework.ConstraintsPrefixOperator.ApplyPrefix(NUnit.Framework.Constraints.Constraint)
		public System.String SystemObject.ToString()
		public Void NUnit.Framework.ConstraintsPrefixOperator.Reduce(ConstraintStack)
	PROPERTIES:
		Int32 LeftPrecedence { public get; }
		Int32 RightPrecedence { public get; }
		System.Object LeftContext { public get; public set; }
		System.Object RightContext { public get; public set; }

	public class NUnit.Framework.Constraints.CollectionOrderedConstraint
	INHERITS:
		NUnit.Framework.Constraints.CollectionConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean NUnit.Framework.ConstraintsCollectionConstraint.Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.CollectionOrderedConstraint By(System.String)
		public NUnit.Framework.Constraints.CollectionOrderedConstraint Using(System.Collections.IComparer)
		public NUnit.Framework.Constraints.CollectionOrderedConstraint Using[T](System.Collections.Generic.IComparer`1[T])
		public NUnit.Framework.Constraints.CollectionOrderedConstraint Using[T](System.Comparison`1[T])
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.CollectionOrderedConstraint Descending { public get; }
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.CollectionSubsetConstraint
	INHERITS:
		NUnit.Framework.Constraints.CollectionItemsEqualConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.Collections.IEnumerable)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean NUnit.Framework.ConstraintsCollectionConstraint.Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint NUnit.Framework.ConstraintsCollectionItemsEqualConstraint.Using(System.Collections.IComparer)
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint NUnit.Framework.ConstraintsCollectionItemsEqualConstraint.Using(System.Collections.IEqualityComparer)
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint NUnit.Framework.ConstraintsCollectionItemsEqualConstraint.Using[T](System.Collections.Generic.IComparer`1[T])
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint NUnit.Framework.ConstraintsCollectionItemsEqualConstraint.Using[T](System.Collections.Generic.IEqualityComparer`1[T])
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint NUnit.Framework.ConstraintsCollectionItemsEqualConstraint.Using[T](System.Comparison`1[T])
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.CollectionItemsEqualConstraint IgnoreCase { public get; }
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.CollectionTally
	CONSTRUCTORS:
		public Void .ctor(NUnit.Framework.Constraints.NUnitEqualityComparer, System.Collections.IEnumerable)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Boolean TryRemove(System.Collections.IEnumerable)
		public Boolean TryRemove(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()
	PROPERTIES:
		Int32 Count { public get; }

	public abstract class NUnit.Framework.Constraints.ComparisonAdapter
	CONSTRUCTORS:
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 Compare(System.Object, System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.ComparisonAdapter For(System.Collections.IComparer)
		public NUnit.Framework.Constraints.ComparisonAdapter For[T](System.Collections.Generic.IComparer`1[T])
		public NUnit.Framework.Constraints.ComparisonAdapter For[T](System.Comparison`1[T])
		public System.String SystemObject.ToString()

	public abstract class NUnit.Framework.Constraints.ComparisonConstraint
	INHERITS:
		NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.Object)
		public Void .ctor(System.Object, System.Object)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.ComparisonConstraint Using(System.Collections.IComparer)
		public NUnit.Framework.Constraints.ComparisonConstraint Using[T](System.Collections.Generic.IComparer`1[T])
		public NUnit.Framework.Constraints.ComparisonConstraint Using[T](System.Comparison`1[T])
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public abstract class NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint After(Int32, Int32)
		public System.String ToString()
		public Void WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.ConstraintBuilder
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.Constraint Resolve()
		public System.String SystemObject.ToString()
		public Void Append(NUnit.Framework.Constraints.Constraint)
		public Void Append(NUnit.Framework.Constraints.ConstraintOperator)
	PROPERTIES:
		Boolean IsResolvable { public get; }

	public class NUnit.Framework.Constraints.ConstraintBuilder+ConstraintStack
	CONSTRUCTORS:
		public Void .ctor(NUnit.Framework.Constraints.ConstraintBuilder)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.Constraint Pop()
		public System.String SystemObject.ToString()
		public Void Push(NUnit.Framework.Constraints.Constraint)
	PROPERTIES:
		Boolean Empty { public get; }
		NUnit.Framework.Constraints.Constraint Top { public get; }

	public class NUnit.Framework.Constraints.ConstraintBuilder+OperatorStack
	CONSTRUCTORS:
		public Void .ctor(NUnit.Framework.Constraints.ConstraintBuilder)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.ConstraintOperator Pop()
		public System.String SystemObject.ToString()
		public Void Push(NUnit.Framework.Constraints.ConstraintOperator)
	PROPERTIES:
		Boolean Empty { public get; }
		NUnit.Framework.Constraints.ConstraintOperator Top { public get; }

	public class NUnit.Framework.Constraints.ConstraintExpression
	INHERITS:
		NUnit.Framework.Constraints.ConstraintExpressionBase
	CONSTRUCTORS:
		public Void .ctor()
		public Void .ctor(NUnit.Framework.Constraints.ConstraintBuilder)
	METHODS:
		[System.ObsoleteAttribute]
		public NUnit.Framework.Constraints.InstanceOfTypeConstraint InstanceOfType(System.Type)
		[System.ObsoleteAttribute]
		public NUnit.Framework.Constraints.InstanceOfTypeConstraint InstanceOfType[T]()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.AssignableFromConstraint AssignableFrom(System.Type)
		public NUnit.Framework.Constraints.AssignableFromConstraint AssignableFrom[T]()
		public NUnit.Framework.Constraints.AssignableToConstraint AssignableTo(System.Type)
		public NUnit.Framework.Constraints.AssignableToConstraint AssignableTo[T]()
		public NUnit.Framework.Constraints.CollectionContainsConstraint Contains(System.Object)
		public NUnit.Framework.Constraints.CollectionContainsConstraint Member(System.Object)
		public NUnit.Framework.Constraints.CollectionEquivalentConstraint EquivalentTo(System.Collections.IEnumerable)
		public NUnit.Framework.Constraints.CollectionSubsetConstraint SubsetOf(System.Collections.IEnumerable)
		public NUnit.Framework.Constraints.Constraint Matches(NUnit.Framework.Constraints.IResolveConstraint)
		public NUnit.Framework.Constraints.Constraint Matches[T](System.Predicate`1[T])
		public NUnit.Framework.Constraints.Constraint NUnit.Framework.ConstraintsConstraintExpressionBase.Append(NUnit.Framework.Constraints.Constraint)
		public NUnit.Framework.Constraints.ConstraintExpression Exactly(Int32)
		public NUnit.Framework.Constraints.ConstraintExpression NUnit.Framework.ConstraintsConstraintExpressionBase.Append(NUnit.Framework.Constraints.ConstraintOperator)
		public NUnit.Framework.Constraints.ContainsConstraint Contains(System.String)
		public NUnit.Framework.Constraints.EndsWithConstraint EndsWith(System.String)
		public NUnit.Framework.Constraints.EndsWithConstraint StringEnding(System.String)
		public NUnit.Framework.Constraints.EqualConstraint EqualTo(System.Object)
		public NUnit.Framework.Constraints.ExactTypeConstraint TypeOf(System.Type)
		public NUnit.Framework.Constraints.ExactTypeConstraint TypeOf[T]()
		public NUnit.Framework.Constraints.GreaterThanConstraint GreaterThan(System.Object)
		public NUnit.Framework.Constraints.GreaterThanOrEqualConstraint AtLeast(System.Object)
		public NUnit.Framework.Constraints.GreaterThanOrEqualConstraint GreaterThanOrEqualTo(System.Object)
		public NUnit.Framework.Constraints.InstanceOfTypeConstraint InstanceOf(System.Type)
		public NUnit.Framework.Constraints.InstanceOfTypeConstraint InstanceOf[T]()
		public NUnit.Framework.Constraints.LessThanConstraint LessThan(System.Object)
		public NUnit.Framework.Constraints.LessThanOrEqualConstraint AtMost(System.Object)
		public NUnit.Framework.Constraints.LessThanOrEqualConstraint LessThanOrEqualTo(System.Object)
		public NUnit.Framework.Constraints.RangeConstraint`1[T] InRange[T](T, T)
		public NUnit.Framework.Constraints.RegexConstraint Matches(System.String)
		public NUnit.Framework.Constraints.RegexConstraint StringMatching(System.String)
		public NUnit.Framework.Constraints.ResolvableConstraintExpression Attribute(System.Type)
		public NUnit.Framework.Constraints.ResolvableConstraintExpression Attribute[T]()
		public NUnit.Framework.Constraints.ResolvableConstraintExpression NUnit.Framework.ConstraintsConstraintExpressionBase.Append(NUnit.Framework.Constraints.SelfResolvingOperator)
		public NUnit.Framework.Constraints.ResolvableConstraintExpression Property(System.String)
		public NUnit.Framework.Constraints.SameAsConstraint SameAs(System.Object)
		public NUnit.Framework.Constraints.SamePathConstraint SamePath(System.String)
		public NUnit.Framework.Constraints.SamePathOrUnderConstraint SamePathOrUnder(System.String)
		public NUnit.Framework.Constraints.StartsWithConstraint StartsWith(System.String)
		public NUnit.Framework.Constraints.StartsWithConstraint StringStarting(System.String)
		public NUnit.Framework.Constraints.SubPathConstraint SubPath(System.String)
		public NUnit.Framework.Constraints.SubstringConstraint ContainsSubstring(System.String)
		public NUnit.Framework.Constraints.SubstringConstraint StringContaining(System.String)
		public System.String NUnit.Framework.ConstraintsConstraintExpressionBase.ToString()
	PROPERTIES:
		NUnit.Framework.Constraints.BinarySerializableConstraint BinarySerializable { public get; }
		NUnit.Framework.Constraints.CollectionOrderedConstraint Ordered { public get; }
		NUnit.Framework.Constraints.ConstraintExpression All { public get; }
		NUnit.Framework.Constraints.ConstraintExpression No { public get; }
		NUnit.Framework.Constraints.ConstraintExpression None { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Not { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Some { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }
		NUnit.Framework.Constraints.EmptyConstraint Empty { public get; }
		NUnit.Framework.Constraints.FalseConstraint False { public get; }
		NUnit.Framework.Constraints.GreaterThanConstraint Positive { public get; }
		NUnit.Framework.Constraints.LessThanConstraint Negative { public get; }
		NUnit.Framework.Constraints.NaNConstraint NaN { public get; }
		NUnit.Framework.Constraints.NullConstraint Null { public get; }
		NUnit.Framework.Constraints.ResolvableConstraintExpression Count { public get; }
		NUnit.Framework.Constraints.ResolvableConstraintExpression InnerException { public get; }
		NUnit.Framework.Constraints.ResolvableConstraintExpression Length { public get; }
		NUnit.Framework.Constraints.ResolvableConstraintExpression Message { public get; }
		NUnit.Framework.Constraints.TrueConstraint True { public get; }
		NUnit.Framework.Constraints.UniqueItemsConstraint Unique { public get; }
		NUnit.Framework.Constraints.XmlSerializableConstraint XmlSerializable { public get; }

	public abstract class NUnit.Framework.Constraints.ConstraintExpressionBase
	CONSTRUCTORS:
		public Void .ctor()
		public Void .ctor(NUnit.Framework.Constraints.ConstraintBuilder)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.Constraint Append(NUnit.Framework.Constraints.Constraint)
		public NUnit.Framework.Constraints.ConstraintExpression Append(NUnit.Framework.Constraints.ConstraintOperator)
		public NUnit.Framework.Constraints.ResolvableConstraintExpression Append(NUnit.Framework.Constraints.SelfResolvingOperator)
		public System.String ToString()

	public class NUnit.Framework.Constraints.ConstraintFactory
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.ObsoleteAttribute]
		public NUnit.Framework.Constraints.InstanceOfTypeConstraint InstanceOfType(System.Type)
		[System.ObsoleteAttribute]
		public NUnit.Framework.Constraints.InstanceOfTypeConstraint InstanceOfType[T]()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.AssignableFromConstraint AssignableFrom(System.Type)
		public NUnit.Framework.Constraints.AssignableFromConstraint AssignableFrom[T]()
		public NUnit.Framework.Constraints.AssignableToConstraint AssignableTo(System.Type)
		public NUnit.Framework.Constraints.AssignableToConstraint AssignableTo[T]()
		public NUnit.Framework.Constraints.CollectionContainsConstraint Contains(System.Object)
		public NUnit.Framework.Constraints.CollectionContainsConstraint Member(System.Object)
		public NUnit.Framework.Constraints.CollectionEquivalentConstraint EquivalentTo(System.Collections.IEnumerable)
		public NUnit.Framework.Constraints.CollectionSubsetConstraint SubsetOf(System.Collections.IEnumerable)
		public NUnit.Framework.Constraints.ConstraintExpression Exactly(Int32)
		public NUnit.Framework.Constraints.ContainsConstraint Contains(System.String)
		public NUnit.Framework.Constraints.EndsWithConstraint DoesNotEndWith(System.String)
		public NUnit.Framework.Constraints.EndsWithConstraint EndsWith(System.String)
		public NUnit.Framework.Constraints.EndsWithConstraint StringEnding(System.String)
		public NUnit.Framework.Constraints.EqualConstraint EqualTo(System.Object)
		public NUnit.Framework.Constraints.ExactTypeConstraint TypeOf(System.Type)
		public NUnit.Framework.Constraints.ExactTypeConstraint TypeOf[T]()
		public NUnit.Framework.Constraints.GreaterThanConstraint GreaterThan(System.Object)
		public NUnit.Framework.Constraints.GreaterThanOrEqualConstraint AtLeast(System.Object)
		public NUnit.Framework.Constraints.GreaterThanOrEqualConstraint GreaterThanOrEqualTo(System.Object)
		public NUnit.Framework.Constraints.InstanceOfTypeConstraint InstanceOf(System.Type)
		public NUnit.Framework.Constraints.InstanceOfTypeConstraint InstanceOf[T]()
		public NUnit.Framework.Constraints.LessThanConstraint LessThan(System.Object)
		public NUnit.Framework.Constraints.LessThanOrEqualConstraint AtMost(System.Object)
		public NUnit.Framework.Constraints.LessThanOrEqualConstraint LessThanOrEqualTo(System.Object)
		public NUnit.Framework.Constraints.RangeConstraint`1[T] InRange[T](T, T)
		public NUnit.Framework.Constraints.RegexConstraint DoesNotMatch(System.String)
		public NUnit.Framework.Constraints.RegexConstraint Matches(System.String)
		public NUnit.Framework.Constraints.RegexConstraint StringMatching(System.String)
		public NUnit.Framework.Constraints.ResolvableConstraintExpression Attribute(System.Type)
		public NUnit.Framework.Constraints.ResolvableConstraintExpression Attribute[T]()
		public NUnit.Framework.Constraints.ResolvableConstraintExpression Property(System.String)
		public NUnit.Framework.Constraints.SameAsConstraint SameAs(System.Object)
		public NUnit.Framework.Constraints.SamePathConstraint SamePath(System.String)
		public NUnit.Framework.Constraints.SamePathOrUnderConstraint SamePathOrUnder(System.String)
		public NUnit.Framework.Constraints.StartsWithConstraint DoesNotStartWith(System.String)
		public NUnit.Framework.Constraints.StartsWithConstraint StartsWith(System.String)
		public NUnit.Framework.Constraints.StartsWithConstraint StringStarting(System.String)
		public NUnit.Framework.Constraints.SubPathConstraint SubPath(System.String)
		public NUnit.Framework.Constraints.SubstringConstraint ContainsSubstring(System.String)
		public NUnit.Framework.Constraints.SubstringConstraint DoesNotContain(System.String)
		public NUnit.Framework.Constraints.SubstringConstraint StringContaining(System.String)
		public System.String SystemObject.ToString()
	PROPERTIES:
		NUnit.Framework.Constraints.BinarySerializableConstraint BinarySerializable { public get; }
		NUnit.Framework.Constraints.CollectionOrderedConstraint Ordered { public get; }
		NUnit.Framework.Constraints.ConstraintExpression All { public get; }
		NUnit.Framework.Constraints.ConstraintExpression No { public get; }
		NUnit.Framework.Constraints.ConstraintExpression None { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Not { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Some { public get; }
		NUnit.Framework.Constraints.EmptyConstraint Empty { public get; }
		NUnit.Framework.Constraints.FalseConstraint False { public get; }
		NUnit.Framework.Constraints.GreaterThanConstraint Positive { public get; }
		NUnit.Framework.Constraints.LessThanConstraint Negative { public get; }
		NUnit.Framework.Constraints.NaNConstraint NaN { public get; }
		NUnit.Framework.Constraints.NullConstraint Null { public get; }
		NUnit.Framework.Constraints.ResolvableConstraintExpression Count { public get; }
		NUnit.Framework.Constraints.ResolvableConstraintExpression InnerException { public get; }
		NUnit.Framework.Constraints.ResolvableConstraintExpression Length { public get; }
		NUnit.Framework.Constraints.ResolvableConstraintExpression Message { public get; }
		NUnit.Framework.Constraints.TrueConstraint True { public get; }
		NUnit.Framework.Constraints.UniqueItemsConstraint Unique { public get; }
		NUnit.Framework.Constraints.XmlSerializableConstraint XmlSerializable { public get; }

	public abstract class NUnit.Framework.Constraints.ConstraintOperator
	CONSTRUCTORS:
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()
		public Void Reduce(ConstraintStack)
	PROPERTIES:
		Int32 LeftPrecedence { public get; }
		Int32 RightPrecedence { public get; }
		System.Object LeftContext { public get; public set; }
		System.Object RightContext { public get; public set; }

	public class NUnit.Framework.Constraints.ContainsConstraint
	INHERITS:
		NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.Object)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.ContainsConstraint Using(System.Collections.IComparer)
		public NUnit.Framework.Constraints.ContainsConstraint Using(System.Collections.IEqualityComparer)
		public NUnit.Framework.Constraints.ContainsConstraint Using[T](System.Collections.Generic.IComparer`1[T])
		public NUnit.Framework.Constraints.ContainsConstraint Using[T](System.Collections.Generic.IEqualityComparer`1[T])
		public NUnit.Framework.Constraints.ContainsConstraint Using[T](System.Comparison`1[T])
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }
		NUnit.Framework.Constraints.ContainsConstraint IgnoreCase { public get; }

	public class NUnit.Framework.Constraints.DelayedConstraint
	INHERITS:
		NUnit.Framework.Constraints.PrefixConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(NUnit.Framework.Constraints.Constraint, Int32)
		public Void .ctor(NUnit.Framework.Constraints.Constraint, Int32, Int32)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.EmptyCollectionConstraint
	INHERITS:
		NUnit.Framework.Constraints.CollectionConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean NUnit.Framework.ConstraintsCollectionConstraint.Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.EmptyConstraint
	INHERITS:
		NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.EmptyDirectoryConstraint
	INHERITS:
		NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.EmptyStringConstraint
	INHERITS:
		NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.EndsWithConstraint
	INHERITS:
		NUnit.Framework.Constraints.StringConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.String)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean NUnit.Framework.ConstraintsStringConstraint.Matches(System.Object)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }
		NUnit.Framework.Constraints.StringConstraint IgnoreCase { public get; }

	public class NUnit.Framework.Constraints.EqualConstraint
	INHERITS:
		NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.Object)
	METHODS:
		[System.ObsoleteAttribute]
		public NUnit.Framework.Constraints.EqualConstraint Comparer(System.Collections.IComparer)
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public NUnit.Framework.Constraints.EqualConstraint Using(System.Collections.IComparer)
		public NUnit.Framework.Constraints.EqualConstraint Using(System.Collections.IEqualityComparer)
		public NUnit.Framework.Constraints.EqualConstraint Using[T](System.Collections.Generic.IComparer`1[T])
		public NUnit.Framework.Constraints.EqualConstraint Using[T](System.Collections.Generic.IEqualityComparer`1[T])
		public NUnit.Framework.Constraints.EqualConstraint Using[T](System.Comparison`1[T])
		public NUnit.Framework.Constraints.EqualConstraint Within(System.Object)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }
		NUnit.Framework.Constraints.EqualConstraint AsCollection { public get; }
		NUnit.Framework.Constraints.EqualConstraint Days { public get; }
		NUnit.Framework.Constraints.EqualConstraint Hours { public get; }
		NUnit.Framework.Constraints.EqualConstraint IgnoreCase { public get; }
		NUnit.Framework.Constraints.EqualConstraint Milliseconds { public get; }
		NUnit.Framework.Constraints.EqualConstraint Minutes { public get; }
		NUnit.Framework.Constraints.EqualConstraint NoClip { public get; }
		NUnit.Framework.Constraints.EqualConstraint Percent { public get; }
		NUnit.Framework.Constraints.EqualConstraint Seconds { public get; }
		NUnit.Framework.Constraints.EqualConstraint Ticks { public get; }
		NUnit.Framework.Constraints.EqualConstraint Ulps { public get; }

	public abstract class NUnit.Framework.Constraints.EqualityAdapter
	CONSTRUCTORS:
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean AreEqual(System.Object, System.Object)
		public Boolean CanCompare(System.Object, System.Object)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.EqualityAdapter For(System.Collections.IComparer)
		public NUnit.Framework.Constraints.EqualityAdapter For(System.Collections.IEqualityComparer)
		public NUnit.Framework.Constraints.EqualityAdapter For[T](System.Collections.Generic.IComparer`1[T])
		public NUnit.Framework.Constraints.EqualityAdapter For[T](System.Collections.Generic.IEqualityComparer`1[T])
		public NUnit.Framework.Constraints.EqualityAdapter For[T](System.Comparison`1[T])
		public System.String SystemObject.ToString()

	public class NUnit.Framework.Constraints.ExactCountConstraint
	INHERITS:
		NUnit.Framework.Constraints.PrefixConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(Int32, NUnit.Framework.Constraints.Constraint)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.ExactCountOperator
	INHERITS:
		NUnit.Framework.Constraints.CollectionOperator
	CONSTRUCTORS:
		public Void .ctor(Int32)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.Constraint ApplyPrefix(NUnit.Framework.Constraints.Constraint)
		public System.String SystemObject.ToString()
		public Void NUnit.Framework.ConstraintsPrefixOperator.Reduce(ConstraintStack)
	PROPERTIES:
		Int32 LeftPrecedence { public get; }
		Int32 RightPrecedence { public get; }
		System.Object LeftContext { public get; public set; }
		System.Object RightContext { public get; public set; }

	public class NUnit.Framework.Constraints.ExactTypeConstraint
	INHERITS:
		NUnit.Framework.Constraints.TypeConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.Type)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsTypeConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.ExceptionTypeConstraint
	INHERITS:
		NUnit.Framework.Constraints.ExactTypeConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.Type)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean NUnit.Framework.ConstraintsExactTypeConstraint.Matches(System.Object)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsExactTypeConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.FailurePoint
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()
	FIELDS:
		public Boolean ActualHasData
		public Boolean ExpectedHasData
		public Int32 Position
		public System.Object ActualValue
		public System.Object ExpectedValue

	public class NUnit.Framework.Constraints.FalseConstraint
	INHERITS:
		NUnit.Framework.Constraints.BasicConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean NUnit.Framework.ConstraintsBasicConstraint.Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsBasicConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.FloatingPointNumerics
	CONSTRUCTORS:
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean AreAlmostEqualUlps(Double, Double, Int64)
		public Boolean AreAlmostEqualUlps(Single, Single, Int32)
		public Boolean SystemObject.Equals(System.Object)
		public Double ReinterpretAsDouble(Int64)
		public Int32 ReinterpretAsInt(Single)
		public Int32 SystemObject.GetHashCode()
		public Int64 ReinterpretAsLong(Double)
		public Single ReinterpretAsFloat(Int32)
		public System.String SystemObject.ToString()

	public class NUnit.Framework.Constraints.GreaterThanConstraint
	INHERITS:
		NUnit.Framework.Constraints.ComparisonConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.Object)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.ComparisonConstraint NUnit.Framework.ConstraintsComparisonConstraint.Using(System.Collections.IComparer)
		public NUnit.Framework.Constraints.ComparisonConstraint NUnit.Framework.ConstraintsComparisonConstraint.Using[T](System.Collections.Generic.IComparer`1[T])
		public NUnit.Framework.Constraints.ComparisonConstraint NUnit.Framework.ConstraintsComparisonConstraint.Using[T](System.Comparison`1[T])
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.GreaterThanOrEqualConstraint
	INHERITS:
		NUnit.Framework.Constraints.ComparisonConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.Object)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.ComparisonConstraint NUnit.Framework.ConstraintsComparisonConstraint.Using(System.Collections.IComparer)
		public NUnit.Framework.Constraints.ComparisonConstraint NUnit.Framework.ConstraintsComparisonConstraint.Using[T](System.Collections.Generic.IComparer`1[T])
		public NUnit.Framework.Constraints.ComparisonConstraint NUnit.Framework.ConstraintsComparisonConstraint.Using[T](System.Comparison`1[T])
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.InstanceOfTypeConstraint
	INHERITS:
		NUnit.Framework.Constraints.TypeConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.Type)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsTypeConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.LessThanConstraint
	INHERITS:
		NUnit.Framework.Constraints.ComparisonConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.Object)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.ComparisonConstraint NUnit.Framework.ConstraintsComparisonConstraint.Using(System.Collections.IComparer)
		public NUnit.Framework.Constraints.ComparisonConstraint NUnit.Framework.ConstraintsComparisonConstraint.Using[T](System.Collections.Generic.IComparer`1[T])
		public NUnit.Framework.Constraints.ComparisonConstraint NUnit.Framework.ConstraintsComparisonConstraint.Using[T](System.Comparison`1[T])
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.LessThanOrEqualConstraint
	INHERITS:
		NUnit.Framework.Constraints.ComparisonConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.Object)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.ComparisonConstraint NUnit.Framework.ConstraintsComparisonConstraint.Using(System.Collections.IComparer)
		public NUnit.Framework.Constraints.ComparisonConstraint NUnit.Framework.ConstraintsComparisonConstraint.Using[T](System.Collections.Generic.IComparer`1[T])
		public NUnit.Framework.Constraints.ComparisonConstraint NUnit.Framework.ConstraintsComparisonConstraint.Using[T](System.Comparison`1[T])
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public abstract class NUnit.Framework.Constraints.MessageWriter
	INHERITS:
		System.IO.StringWriter
	IMPLEMENTS:
		System.IDisposable
	CONSTRUCTORS:
	METHODS:
		[System.Security.SecurityCriticalAttribute]
		public System.Object SystemMarshalByRefObject.GetLifetimeService()
		[System.Security.SecurityCriticalAttribute]
		public System.Object SystemMarshalByRefObject.InitializeLifetimeService()
		[System.Security.SecurityCriticalAttribute]
		public System.Runtime.Remoting.ObjRef SystemMarshalByRefObject.CreateObjRef(System.Type)
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public Void DisplayDifferences(NUnit.Framework.Constraints.Constraint)
		public Void DisplayDifferences(System.Object, System.Object)
		public Void DisplayDifferences(System.Object, System.Object, NUnit.Framework.Constraints.Tolerance)
		public Void DisplayStringDifferences(System.String, System.String, Int32, Boolean, Boolean)
		public Void WriteActualValue(System.Object)
		public Void WriteCollectionElements(System.Collections.IEnumerable, Int32, Int32)
		public Void WriteConnector(System.String)
		public Void WriteExpectedValue(System.Object)
		public Void WriteMessageLine(Int32, System.String, System.Object[])
		public Void WriteMessageLine(System.String, System.Object[])
		public Void WriteModifier(System.String)
		public Void WritePredicate(System.String)
		public Void WriteValue(System.Object)
	PROPERTIES:
		Int32 MaxLineLength { public get; public set; }
		System.IFormatProvider FormatProvider { public get; }
		System.String NewLine { public get; public set; }
		System.Text.Encoding Encoding { public get; }

	public class NUnit.Framework.Constraints.MsgUtils
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 FindMismatchPosition(System.String, System.String, Int32, Boolean)
		public Int32 SystemObject.GetHashCode()
		public Int32[] GetArrayIndicesFromCollectionIndex(System.Collections.IEnumerable, Int32)
		public System.String ClipString(System.String, Int32, Int32)
		public System.String EscapeControlChars(System.String)
		public System.String GetArrayIndicesAsString(Int32[])
		public System.String GetTypeRepresentation(System.Object)
		public System.String SystemObject.ToString()
		public Void ClipExpectedAndActual(System.String ByRef, System.String ByRef, Int32, Int32)

	public class NUnit.Framework.Constraints.NaNConstraint
	INHERITS:
		NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.NoItemConstraint
	INHERITS:
		NUnit.Framework.Constraints.PrefixConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(NUnit.Framework.Constraints.Constraint)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.NoneOperator
	INHERITS:
		NUnit.Framework.Constraints.CollectionOperator
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.Constraint ApplyPrefix(NUnit.Framework.Constraints.Constraint)
		public System.String SystemObject.ToString()
		public Void NUnit.Framework.ConstraintsPrefixOperator.Reduce(ConstraintStack)
	PROPERTIES:
		Int32 LeftPrecedence { public get; }
		Int32 RightPrecedence { public get; }
		System.Object LeftContext { public get; public set; }
		System.Object RightContext { public get; public set; }

	public class NUnit.Framework.Constraints.NotConstraint
	INHERITS:
		NUnit.Framework.Constraints.PrefixConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(NUnit.Framework.Constraints.Constraint)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.NotOperator
	INHERITS:
		NUnit.Framework.Constraints.PrefixOperator
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.Constraint ApplyPrefix(NUnit.Framework.Constraints.Constraint)
		public System.String SystemObject.ToString()
		public Void NUnit.Framework.ConstraintsPrefixOperator.Reduce(ConstraintStack)
	PROPERTIES:
		Int32 LeftPrecedence { public get; }
		Int32 RightPrecedence { public get; }
		System.Object LeftContext { public get; public set; }
		System.Object RightContext { public get; public set; }

	public class NUnit.Framework.Constraints.NullConstraint
	INHERITS:
		NUnit.Framework.Constraints.BasicConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean NUnit.Framework.ConstraintsBasicConstraint.Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsBasicConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.NullOrEmptyStringConstraint
	INHERITS:
		NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.Numerics
	CONSTRUCTORS:
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean AreEqual(System.Object, System.Object, NUnit.Framework.Constraints.Tolerance ByRef)
		public Boolean IsFixedPointNumeric(System.Object)
		public Boolean IsFloatingPointNumeric(System.Object)
		public Boolean IsNumericType(System.Object)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 Compare(System.Object, System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()

	public class NUnit.Framework.Constraints.NUnitComparer
	IMPLEMENTS:
		System.Collections.IComparer
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 Compare(System.Object, System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()

	public class NUnit.Framework.Constraints.NUnitComparer`1
	IMPLEMENTS:
		
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 Compare(T, T)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()

	public class NUnit.Framework.Constraints.NUnitEqualityComparer
	IMPLEMENTS:
		NUnit.Framework.INUnitEqualityComparer
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean AreEqual(System.Object, System.Object, NUnit.Framework.Constraints.Tolerance ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()
	PROPERTIES:
		Boolean CompareAsCollection { public get; public set; }
		Boolean IgnoreCase { public get; public set; }
		System.Collections.Generic.IList`1[NUnit.Framework.Constraints.EqualityAdapter] ExternalComparers { public get; }
		System.Collections.Generic.IList`1[NUnit.Framework.Constraints.FailurePoint] FailurePoints { public get; }

	public class NUnit.Framework.Constraints.OrConstraint
	INHERITS:
		NUnit.Framework.Constraints.BinaryConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(NUnit.Framework.Constraints.Constraint, NUnit.Framework.Constraints.Constraint)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.OrOperator
	INHERITS:
		NUnit.Framework.Constraints.BinaryOperator
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.Constraint ApplyOperator(NUnit.Framework.Constraints.Constraint, NUnit.Framework.Constraints.Constraint)
		public System.String SystemObject.ToString()
		public Void NUnit.Framework.ConstraintsBinaryOperator.Reduce(ConstraintStack)
	PROPERTIES:
		Int32 LeftPrecedence { public get; }
		Int32 RightPrecedence { public get; }
		System.Object LeftContext { public get; public set; }
		System.Object RightContext { public get; public set; }

	public abstract class NUnit.Framework.Constraints.PathConstraint
	INHERITS:
		NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }
		NUnit.Framework.Constraints.PathConstraint IgnoreCase { public get; }
		NUnit.Framework.Constraints.PathConstraint RespectCase { public get; }

	public class NUnit.Framework.Constraints.PredicateConstraint`1
	INHERITS:
		NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.Predicate`1[T])
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public abstract class NUnit.Framework.Constraints.PrefixConstraint
	INHERITS:
		NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public abstract class NUnit.Framework.Constraints.PrefixOperator
	INHERITS:
		NUnit.Framework.Constraints.ConstraintOperator
	CONSTRUCTORS:
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.Constraint ApplyPrefix(NUnit.Framework.Constraints.Constraint)
		public System.String SystemObject.ToString()
		public Void Reduce(ConstraintStack)
	PROPERTIES:
		Int32 LeftPrecedence { public get; }
		Int32 RightPrecedence { public get; }
		System.Object LeftContext { public get; public set; }
		System.Object RightContext { public get; public set; }

	public class NUnit.Framework.Constraints.PropertyConstraint
	INHERITS:
		NUnit.Framework.Constraints.PrefixConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.String, NUnit.Framework.Constraints.Constraint)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.PropertyExistsConstraint
	INHERITS:
		NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.String)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.PropOperator
	INHERITS:
		NUnit.Framework.Constraints.SelfResolvingOperator
	CONSTRUCTORS:
		public Void .ctor(System.String)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()
		public Void Reduce(ConstraintStack)
	PROPERTIES:
		Int32 LeftPrecedence { public get; }
		Int32 RightPrecedence { public get; }
		System.Object LeftContext { public get; public set; }
		System.Object RightContext { public get; public set; }
		System.String Name { public get; }

	public class NUnit.Framework.Constraints.RangeConstraint`1
	INHERITS:
		NUnit.Framework.Constraints.ComparisonConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(T, T)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.ComparisonConstraint NUnit.Framework.ConstraintsComparisonConstraint.Using(System.Collections.IComparer)
		public NUnit.Framework.Constraints.ComparisonConstraint NUnit.Framework.ConstraintsComparisonConstraint.Using[T](System.Collections.Generic.IComparer`1[T])
		public NUnit.Framework.Constraints.ComparisonConstraint NUnit.Framework.ConstraintsComparisonConstraint.Using[T](System.Comparison`1[T])
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.RegexConstraint
	INHERITS:
		NUnit.Framework.Constraints.StringConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.String)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean NUnit.Framework.ConstraintsStringConstraint.Matches(System.Object)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }
		NUnit.Framework.Constraints.StringConstraint IgnoreCase { public get; }

	public class NUnit.Framework.Constraints.ResolvableConstraintExpression
	INHERITS:
		NUnit.Framework.Constraints.ConstraintExpression
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor()
		public Void .ctor(NUnit.Framework.Constraints.ConstraintBuilder)
	METHODS:
		[System.ObsoleteAttribute]
		public NUnit.Framework.Constraints.InstanceOfTypeConstraint NUnit.Framework.ConstraintsConstraintExpression.InstanceOfType(System.Type)
		[System.ObsoleteAttribute]
		public NUnit.Framework.Constraints.InstanceOfTypeConstraint NUnit.Framework.ConstraintsConstraintExpression.InstanceOfType[T]()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.AssignableFromConstraint NUnit.Framework.ConstraintsConstraintExpression.AssignableFrom(System.Type)
		public NUnit.Framework.Constraints.AssignableFromConstraint NUnit.Framework.ConstraintsConstraintExpression.AssignableFrom[T]()
		public NUnit.Framework.Constraints.AssignableToConstraint NUnit.Framework.ConstraintsConstraintExpression.AssignableTo(System.Type)
		public NUnit.Framework.Constraints.AssignableToConstraint NUnit.Framework.ConstraintsConstraintExpression.AssignableTo[T]()
		public NUnit.Framework.Constraints.CollectionContainsConstraint NUnit.Framework.ConstraintsConstraintExpression.Contains(System.Object)
		public NUnit.Framework.Constraints.CollectionContainsConstraint NUnit.Framework.ConstraintsConstraintExpression.Member(System.Object)
		public NUnit.Framework.Constraints.CollectionEquivalentConstraint NUnit.Framework.ConstraintsConstraintExpression.EquivalentTo(System.Collections.IEnumerable)
		public NUnit.Framework.Constraints.CollectionSubsetConstraint NUnit.Framework.ConstraintsConstraintExpression.SubsetOf(System.Collections.IEnumerable)
		public NUnit.Framework.Constraints.Constraint NUnit.Framework.ConstraintsConstraintExpression.Matches(NUnit.Framework.Constraints.IResolveConstraint)
		public NUnit.Framework.Constraints.Constraint NUnit.Framework.ConstraintsConstraintExpression.Matches[T](System.Predicate`1[T])
		public NUnit.Framework.Constraints.Constraint NUnit.Framework.ConstraintsConstraintExpressionBase.Append(NUnit.Framework.Constraints.Constraint)
		public NUnit.Framework.Constraints.ConstraintExpression NUnit.Framework.ConstraintsConstraintExpression.Exactly(Int32)
		public NUnit.Framework.Constraints.ConstraintExpression NUnit.Framework.ConstraintsConstraintExpressionBase.Append(NUnit.Framework.Constraints.ConstraintOperator)
		public NUnit.Framework.Constraints.ContainsConstraint NUnit.Framework.ConstraintsConstraintExpression.Contains(System.String)
		public NUnit.Framework.Constraints.EndsWithConstraint NUnit.Framework.ConstraintsConstraintExpression.EndsWith(System.String)
		public NUnit.Framework.Constraints.EndsWithConstraint NUnit.Framework.ConstraintsConstraintExpression.StringEnding(System.String)
		public NUnit.Framework.Constraints.EqualConstraint NUnit.Framework.ConstraintsConstraintExpression.EqualTo(System.Object)
		public NUnit.Framework.Constraints.ExactTypeConstraint NUnit.Framework.ConstraintsConstraintExpression.TypeOf(System.Type)
		public NUnit.Framework.Constraints.ExactTypeConstraint NUnit.Framework.ConstraintsConstraintExpression.TypeOf[T]()
		public NUnit.Framework.Constraints.GreaterThanConstraint NUnit.Framework.ConstraintsConstraintExpression.GreaterThan(System.Object)
		public NUnit.Framework.Constraints.GreaterThanOrEqualConstraint NUnit.Framework.ConstraintsConstraintExpression.AtLeast(System.Object)
		public NUnit.Framework.Constraints.GreaterThanOrEqualConstraint NUnit.Framework.ConstraintsConstraintExpression.GreaterThanOrEqualTo(System.Object)
		public NUnit.Framework.Constraints.InstanceOfTypeConstraint NUnit.Framework.ConstraintsConstraintExpression.InstanceOf(System.Type)
		public NUnit.Framework.Constraints.InstanceOfTypeConstraint NUnit.Framework.ConstraintsConstraintExpression.InstanceOf[T]()
		public NUnit.Framework.Constraints.LessThanConstraint NUnit.Framework.ConstraintsConstraintExpression.LessThan(System.Object)
		public NUnit.Framework.Constraints.LessThanOrEqualConstraint NUnit.Framework.ConstraintsConstraintExpression.AtMost(System.Object)
		public NUnit.Framework.Constraints.LessThanOrEqualConstraint NUnit.Framework.ConstraintsConstraintExpression.LessThanOrEqualTo(System.Object)
		public NUnit.Framework.Constraints.RangeConstraint`1[T] NUnit.Framework.ConstraintsConstraintExpression.InRange[T](T, T)
		public NUnit.Framework.Constraints.RegexConstraint NUnit.Framework.ConstraintsConstraintExpression.Matches(System.String)
		public NUnit.Framework.Constraints.RegexConstraint NUnit.Framework.ConstraintsConstraintExpression.StringMatching(System.String)
		public NUnit.Framework.Constraints.ResolvableConstraintExpression NUnit.Framework.ConstraintsConstraintExpression.Attribute(System.Type)
		public NUnit.Framework.Constraints.ResolvableConstraintExpression NUnit.Framework.ConstraintsConstraintExpression.Attribute[T]()
		public NUnit.Framework.Constraints.ResolvableConstraintExpression NUnit.Framework.ConstraintsConstraintExpression.Property(System.String)
		public NUnit.Framework.Constraints.ResolvableConstraintExpression NUnit.Framework.ConstraintsConstraintExpressionBase.Append(NUnit.Framework.Constraints.SelfResolvingOperator)
		public NUnit.Framework.Constraints.SameAsConstraint NUnit.Framework.ConstraintsConstraintExpression.SameAs(System.Object)
		public NUnit.Framework.Constraints.SamePathConstraint NUnit.Framework.ConstraintsConstraintExpression.SamePath(System.String)
		public NUnit.Framework.Constraints.SamePathOrUnderConstraint NUnit.Framework.ConstraintsConstraintExpression.SamePathOrUnder(System.String)
		public NUnit.Framework.Constraints.StartsWithConstraint NUnit.Framework.ConstraintsConstraintExpression.StartsWith(System.String)
		public NUnit.Framework.Constraints.StartsWithConstraint NUnit.Framework.ConstraintsConstraintExpression.StringStarting(System.String)
		public NUnit.Framework.Constraints.SubPathConstraint NUnit.Framework.ConstraintsConstraintExpression.SubPath(System.String)
		public NUnit.Framework.Constraints.SubstringConstraint NUnit.Framework.ConstraintsConstraintExpression.ContainsSubstring(System.String)
		public NUnit.Framework.Constraints.SubstringConstraint NUnit.Framework.ConstraintsConstraintExpression.StringContaining(System.String)
		public System.String NUnit.Framework.ConstraintsConstraintExpressionBase.ToString()
	PROPERTIES:
		NUnit.Framework.Constraints.BinarySerializableConstraint BinarySerializable { public get; }
		NUnit.Framework.Constraints.CollectionOrderedConstraint Ordered { public get; }
		NUnit.Framework.Constraints.ConstraintExpression All { public get; }
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression No { public get; }
		NUnit.Framework.Constraints.ConstraintExpression None { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Not { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Some { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }
		NUnit.Framework.Constraints.EmptyConstraint Empty { public get; }
		NUnit.Framework.Constraints.FalseConstraint False { public get; }
		NUnit.Framework.Constraints.GreaterThanConstraint Positive { public get; }
		NUnit.Framework.Constraints.LessThanConstraint Negative { public get; }
		NUnit.Framework.Constraints.NaNConstraint NaN { public get; }
		NUnit.Framework.Constraints.NullConstraint Null { public get; }
		NUnit.Framework.Constraints.ResolvableConstraintExpression Count { public get; }
		NUnit.Framework.Constraints.ResolvableConstraintExpression InnerException { public get; }
		NUnit.Framework.Constraints.ResolvableConstraintExpression Length { public get; }
		NUnit.Framework.Constraints.ResolvableConstraintExpression Message { public get; }
		NUnit.Framework.Constraints.TrueConstraint True { public get; }
		NUnit.Framework.Constraints.UniqueItemsConstraint Unique { public get; }
		NUnit.Framework.Constraints.XmlSerializableConstraint XmlSerializable { public get; }

	public class NUnit.Framework.Constraints.ReusableConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(NUnit.Framework.Constraints.IResolveConstraint)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.Constraint Resolve()
		public System.String ToString()

	public class NUnit.Framework.Constraints.SameAsConstraint
	INHERITS:
		NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.Object)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.SamePathConstraint
	INHERITS:
		NUnit.Framework.Constraints.PathConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.String)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean NUnit.Framework.ConstraintsPathConstraint.Matches(System.Object)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }
		NUnit.Framework.Constraints.PathConstraint IgnoreCase { public get; }
		NUnit.Framework.Constraints.PathConstraint RespectCase { public get; }

	public class NUnit.Framework.Constraints.SamePathOrUnderConstraint
	INHERITS:
		NUnit.Framework.Constraints.PathConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.String)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean NUnit.Framework.ConstraintsPathConstraint.Matches(System.Object)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }
		NUnit.Framework.Constraints.PathConstraint IgnoreCase { public get; }
		NUnit.Framework.Constraints.PathConstraint RespectCase { public get; }

	public abstract class NUnit.Framework.Constraints.SelfResolvingOperator
	INHERITS:
		NUnit.Framework.Constraints.ConstraintOperator
	CONSTRUCTORS:
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()
		public Void NUnit.Framework.ConstraintsConstraintOperator.Reduce(ConstraintStack)
	PROPERTIES:
		Int32 LeftPrecedence { public get; }
		Int32 RightPrecedence { public get; }
		System.Object LeftContext { public get; public set; }
		System.Object RightContext { public get; public set; }

	public class NUnit.Framework.Constraints.SomeItemsConstraint
	INHERITS:
		NUnit.Framework.Constraints.PrefixConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(NUnit.Framework.Constraints.Constraint)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.SomeOperator
	INHERITS:
		NUnit.Framework.Constraints.CollectionOperator
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.Constraint ApplyPrefix(NUnit.Framework.Constraints.Constraint)
		public System.String SystemObject.ToString()
		public Void NUnit.Framework.ConstraintsPrefixOperator.Reduce(ConstraintStack)
	PROPERTIES:
		Int32 LeftPrecedence { public get; }
		Int32 RightPrecedence { public get; }
		System.Object LeftContext { public get; public set; }
		System.Object RightContext { public get; public set; }

	public class NUnit.Framework.Constraints.StartsWithConstraint
	INHERITS:
		NUnit.Framework.Constraints.StringConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.String)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean NUnit.Framework.ConstraintsStringConstraint.Matches(System.Object)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }
		NUnit.Framework.Constraints.StringConstraint IgnoreCase { public get; }

	public abstract class NUnit.Framework.Constraints.StringConstraint
	INHERITS:
		NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }
		NUnit.Framework.Constraints.StringConstraint IgnoreCase { public get; }

	public class NUnit.Framework.Constraints.SubPathConstraint
	INHERITS:
		NUnit.Framework.Constraints.PathConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.String)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean NUnit.Framework.ConstraintsPathConstraint.Matches(System.Object)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }
		NUnit.Framework.Constraints.PathConstraint IgnoreCase { public get; }
		NUnit.Framework.Constraints.PathConstraint RespectCase { public get; }

	public class NUnit.Framework.Constraints.SubstringConstraint
	INHERITS:
		NUnit.Framework.Constraints.StringConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(System.String)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean NUnit.Framework.ConstraintsStringConstraint.Matches(System.Object)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }
		NUnit.Framework.Constraints.StringConstraint IgnoreCase { public get; }

	public class NUnit.Framework.Constraints.ThrowsConstraint
	INHERITS:
		NUnit.Framework.Constraints.PrefixConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor(NUnit.Framework.Constraints.Constraint)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }
		System.Exception ActualException { public get; }

	public class NUnit.Framework.Constraints.ThrowsNothingConstraint
	INHERITS:
		NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.ThrowsOperator
	INHERITS:
		NUnit.Framework.Constraints.SelfResolvingOperator
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()
		public Void Reduce(ConstraintStack)
	PROPERTIES:
		Int32 LeftPrecedence { public get; }
		Int32 RightPrecedence { public get; }
		System.Object LeftContext { public get; public set; }
		System.Object RightContext { public get; public set; }

	public class NUnit.Framework.Constraints.Tolerance
	CONSTRUCTORS:
		public Void .ctor(System.Object)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()
	PROPERTIES:
		Boolean IsEmpty { public get; }
		NUnit.Framework.Constraints.Tolerance Days { public get; }
		NUnit.Framework.Constraints.Tolerance Hours { public get; }
		NUnit.Framework.Constraints.Tolerance Milliseconds { public get; }
		NUnit.Framework.Constraints.Tolerance Minutes { public get; }
		NUnit.Framework.Constraints.Tolerance Percent { public get; }
		NUnit.Framework.Constraints.Tolerance Seconds { public get; }
		NUnit.Framework.Constraints.Tolerance Ticks { public get; }
		NUnit.Framework.Constraints.Tolerance Ulps { public get; }
		NUnit.Framework.Constraints.ToleranceMode Mode { public get; }
		System.Object Value { public get; }

	public class NUnit.Framework.Constraints.TrueConstraint
	INHERITS:
		NUnit.Framework.Constraints.BasicConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean NUnit.Framework.ConstraintsBasicConstraint.Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsBasicConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public abstract class NUnit.Framework.Constraints.TypeConstraint
	INHERITS:
		NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.UniqueItemsConstraint
	INHERITS:
		NUnit.Framework.Constraints.CollectionItemsEqualConstraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean NUnit.Framework.ConstraintsCollectionConstraint.Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint NUnit.Framework.ConstraintsCollectionItemsEqualConstraint.Using(System.Collections.IComparer)
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint NUnit.Framework.ConstraintsCollectionItemsEqualConstraint.Using(System.Collections.IEqualityComparer)
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint NUnit.Framework.ConstraintsCollectionItemsEqualConstraint.Using[T](System.Collections.Generic.IComparer`1[T])
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint NUnit.Framework.ConstraintsCollectionItemsEqualConstraint.Using[T](System.Collections.Generic.IEqualityComparer`1[T])
		public NUnit.Framework.Constraints.CollectionItemsEqualConstraint NUnit.Framework.ConstraintsCollectionItemsEqualConstraint.Using[T](System.Comparison`1[T])
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.CollectionItemsEqualConstraint IgnoreCase { public get; }
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Constraints.WithOperator
	INHERITS:
		NUnit.Framework.Constraints.PrefixOperator
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.Constraint ApplyPrefix(NUnit.Framework.Constraints.Constraint)
		public System.String SystemObject.ToString()
		public Void NUnit.Framework.ConstraintsPrefixOperator.Reduce(ConstraintStack)
	PROPERTIES:
		Int32 LeftPrecedence { public get; }
		Int32 RightPrecedence { public get; }
		System.Object LeftContext { public get; public set; }
		System.Object RightContext { public get; public set; }

	public class NUnit.Framework.Constraints.XmlSerializableConstraint
	INHERITS:
		NUnit.Framework.Constraints.Constraint
	IMPLEMENTS:
		NUnit.Framework.Constraints.IResolveConstraint
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean Matches(System.Object)
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](NUnit.Framework.Constraints.ActualValueDelegate`1[T])
		public Boolean NUnit.Framework.ConstraintsConstraint.Matches[T](T ByRef)
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32)
		public NUnit.Framework.Constraints.DelayedConstraint NUnit.Framework.ConstraintsConstraint.After(Int32, Int32)
		public System.String NUnit.Framework.ConstraintsConstraint.ToString()
		public Void NUnit.Framework.ConstraintsConstraint.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)
		public Void WriteDescriptionTo(NUnit.Framework.Constraints.MessageWriter)
	PROPERTIES:
		NUnit.Framework.Constraints.ConstraintExpression And { public get; }
		NUnit.Framework.Constraints.ConstraintExpression Or { public get; }
		NUnit.Framework.Constraints.ConstraintExpression With { public get; }

	public class NUnit.Framework.Contains
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.CollectionContainsConstraint Item(System.Object)
		public NUnit.Framework.Constraints.SubstringConstraint Substring(System.String)
		public System.String SystemObject.ToString()

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.CultureAttribute
	INHERITS:
		NUnit.Framework.IncludeExcludeAttribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
		public Void .ctor(System.String)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }
		System.String Exclude { public get; public set; }
		System.String Include { public get; public set; }
		System.String Reason { public get; public set; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.DatapointAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.DatapointsAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.DescriptionAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor(System.String)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }
		System.String Description { public get; }

	[System.ObsoleteAttribute]
	public class NUnit.Framework.DirectoryAssert
	CONSTRUCTORS:
	METHODS:
		[System.ComponentModel.EditorBrowsableAttribute]
		public Boolean Equals(System.Object, System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()
		public Void AreEqual(System.IO.DirectoryInfo, System.IO.DirectoryInfo)
		public Void AreEqual(System.IO.DirectoryInfo, System.IO.DirectoryInfo, System.String)
		public Void AreEqual(System.IO.DirectoryInfo, System.IO.DirectoryInfo, System.String, System.Object[])
		public Void AreEqual(System.String, System.String)
		public Void AreEqual(System.String, System.String, System.String)
		public Void AreEqual(System.String, System.String, System.String, System.Object[])
		public Void AreNotEqual(System.IO.DirectoryInfo, System.IO.DirectoryInfo)
		public Void AreNotEqual(System.IO.DirectoryInfo, System.IO.DirectoryInfo, System.String)
		public Void AreNotEqual(System.IO.DirectoryInfo, System.IO.DirectoryInfo, System.String, System.Object[])
		public Void AreNotEqual(System.String, System.String)
		public Void AreNotEqual(System.String, System.String, System.String)
		public Void AreNotEqual(System.String, System.String, System.String, System.Object[])
		public Void IsEmpty(System.IO.DirectoryInfo)
		public Void IsEmpty(System.IO.DirectoryInfo, System.String)
		public Void IsEmpty(System.IO.DirectoryInfo, System.String, System.Object[])
		public Void IsEmpty(System.String)
		public Void IsEmpty(System.String, System.String)
		public Void IsEmpty(System.String, System.String, System.Object[])
		public Void IsNotEmpty(System.IO.DirectoryInfo)
		public Void IsNotEmpty(System.IO.DirectoryInfo, System.String)
		public Void IsNotEmpty(System.IO.DirectoryInfo, System.String, System.Object[])
		public Void IsNotEmpty(System.String)
		public Void IsNotEmpty(System.String, System.String)
		public Void IsNotEmpty(System.String, System.String, System.Object[])
		public Void IsNotWithin(System.IO.DirectoryInfo, System.IO.DirectoryInfo)
		public Void IsNotWithin(System.IO.DirectoryInfo, System.IO.DirectoryInfo, System.String)
		public Void IsNotWithin(System.IO.DirectoryInfo, System.IO.DirectoryInfo, System.String, System.Object[])
		public Void IsNotWithin(System.String, System.String)
		public Void IsNotWithin(System.String, System.String, System.String)
		public Void IsNotWithin(System.String, System.String, System.String, System.Object[])
		public Void IsWithin(System.IO.DirectoryInfo, System.IO.DirectoryInfo)
		public Void IsWithin(System.IO.DirectoryInfo, System.IO.DirectoryInfo, System.String)
		public Void IsWithin(System.IO.DirectoryInfo, System.IO.DirectoryInfo, System.String, System.Object[])
		public Void IsWithin(System.String, System.String)
		public Void IsWithin(System.String, System.String, System.String)
		public Void IsWithin(System.String, System.String, System.String, System.Object[])
		public Void ReferenceEquals(System.Object, System.Object)

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.ExpectedExceptionAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
		public Void .ctor(System.String)
		public Void .ctor(System.Type)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		NUnit.Framework.MessageMatch MatchType { public get; public set; }
		System.Object TypeId { public get; }
		System.String ExpectedExceptionName { public get; public set; }
		System.String ExpectedMessage { public get; public set; }
		System.String Handler { public get; public set; }
		System.String UserMessage { public get; public set; }
		System.Type ExpectedException { public get; public set; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.ExplicitAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
		public Void .ctor(System.String)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }
		System.String Reason { public get; }

	public class NUnit.Framework.FileAssert
	CONSTRUCTORS:
	METHODS:
		[System.ComponentModel.EditorBrowsableAttribute]
		public Boolean Equals(System.Object, System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()
		public Void AreEqual(System.IO.FileInfo, System.IO.FileInfo)
		public Void AreEqual(System.IO.FileInfo, System.IO.FileInfo, System.String)
		public Void AreEqual(System.IO.FileInfo, System.IO.FileInfo, System.String, System.Object[])
		public Void AreEqual(System.IO.Stream, System.IO.Stream)
		public Void AreEqual(System.IO.Stream, System.IO.Stream, System.String)
		public Void AreEqual(System.IO.Stream, System.IO.Stream, System.String, System.Object[])
		public Void AreEqual(System.String, System.String)
		public Void AreEqual(System.String, System.String, System.String)
		public Void AreEqual(System.String, System.String, System.String, System.Object[])
		public Void AreNotEqual(System.IO.FileInfo, System.IO.FileInfo)
		public Void AreNotEqual(System.IO.FileInfo, System.IO.FileInfo, System.String)
		public Void AreNotEqual(System.IO.FileInfo, System.IO.FileInfo, System.String, System.Object[])
		public Void AreNotEqual(System.IO.Stream, System.IO.Stream)
		public Void AreNotEqual(System.IO.Stream, System.IO.Stream, System.String)
		public Void AreNotEqual(System.IO.Stream, System.IO.Stream, System.String, System.Object[])
		public Void AreNotEqual(System.String, System.String)
		public Void AreNotEqual(System.String, System.String, System.String)
		public Void AreNotEqual(System.String, System.String, System.String, System.Object[])
		public Void ReferenceEquals(System.Object, System.Object)

	public class NUnit.Framework.GlobalSettings
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()
	FIELDS:
		public Double DefaultFloatingPointTolerance

	public class NUnit.Framework.Guard
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()
		public Void ArgumentNotNull(System.Object, System.String)
		public Void ArgumentNotNullOrEmpty(System.String, System.String)

	public class NUnit.Framework.Has
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.CollectionContainsConstraint Member(System.Object)
		public NUnit.Framework.Constraints.ConstraintExpression Exactly(Int32)
		public NUnit.Framework.Constraints.ResolvableConstraintExpression Attribute(System.Type)
		public NUnit.Framework.Constraints.ResolvableConstraintExpression Attribute[T]()
		public NUnit.Framework.Constraints.ResolvableConstraintExpression Property(System.String)
		public System.String SystemObject.ToString()

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.IgnoreAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
		public Void .ctor(System.String)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }
		System.String Reason { public get; }

	[System.SerializableAttribute]
	public class NUnit.Framework.IgnoreException
	INHERITS:
		System.Exception
	IMPLEMENTS:
		System.Runtime.Serialization.ISerializable
		System.Runtime.InteropServices._Exception
	CONSTRUCTORS:
		public Void .ctor(System.String)
		public Void .ctor(System.String, System.Exception)
	METHODS:
		[System.Security.SecurityCriticalAttribute]
		public Void SystemException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.Exception SystemException.GetBaseException()
		public System.String SystemException.ToString()
		public System.Type SystemException.GetType()
	PROPERTIES:
		Int32 HResult { public get; }
		System.Collections.IDictionary Data { public get; }
		System.Exception InnerException { public get; }
		System.Reflection.MethodBase TargetSite { public get; }
		System.String HelpLink { public get; public set; }
		System.String Message { public get; }
		System.String Source { public get; public set; }
		System.String StackTrace { public get; }

	[System.AttributeUsageAttribute]
	public abstract class NUnit.Framework.IncludeExcludeAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
		public Void .ctor(System.String)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }
		System.String Exclude { public get; public set; }
		System.String Include { public get; public set; }
		System.String Reason { public get; public set; }

	[System.SerializableAttribute]
	public class NUnit.Framework.InconclusiveException
	INHERITS:
		System.Exception
	IMPLEMENTS:
		System.Runtime.Serialization.ISerializable
		System.Runtime.InteropServices._Exception
	CONSTRUCTORS:
		public Void .ctor(System.String)
		public Void .ctor(System.String, System.Exception)
	METHODS:
		[System.Security.SecurityCriticalAttribute]
		public Void SystemException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.Exception SystemException.GetBaseException()
		public System.String SystemException.ToString()
		public System.Type SystemException.GetType()
	PROPERTIES:
		Int32 HResult { public get; }
		System.Collections.IDictionary Data { public get; }
		System.Exception InnerException { public get; }
		System.Reflection.MethodBase TargetSite { public get; }
		System.String HelpLink { public get; public set; }
		System.String Message { public get; }
		System.String Source { public get; public set; }
		System.String StackTrace { public get; }

	public class NUnit.Framework.Is
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.ObsoleteAttribute]
		public NUnit.Framework.Constraints.InstanceOfTypeConstraint InstanceOfType(System.Type)
		[System.ObsoleteAttribute]
		public NUnit.Framework.Constraints.InstanceOfTypeConstraint InstanceOfType[T]()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.AssignableFromConstraint AssignableFrom(System.Type)
		public NUnit.Framework.Constraints.AssignableFromConstraint AssignableFrom[T]()
		public NUnit.Framework.Constraints.AssignableToConstraint AssignableTo(System.Type)
		public NUnit.Framework.Constraints.AssignableToConstraint AssignableTo[T]()
		public NUnit.Framework.Constraints.CollectionEquivalentConstraint EquivalentTo(System.Collections.IEnumerable)
		public NUnit.Framework.Constraints.CollectionSubsetConstraint SubsetOf(System.Collections.IEnumerable)
		public NUnit.Framework.Constraints.EndsWithConstraint StringEnding(System.String)
		public NUnit.Framework.Constraints.EqualConstraint EqualTo(System.Object)
		public NUnit.Framework.Constraints.ExactTypeConstraint TypeOf(System.Type)
		public NUnit.Framework.Constraints.ExactTypeConstraint TypeOf[T]()
		public NUnit.Framework.Constraints.GreaterThanConstraint GreaterThan(System.Object)
		public NUnit.Framework.Constraints.GreaterThanOrEqualConstraint AtLeast(System.Object)
		public NUnit.Framework.Constraints.GreaterThanOrEqualConstraint GreaterThanOrEqualTo(System.Object)
		public NUnit.Framework.Constraints.InstanceOfTypeConstraint InstanceOf(System.Type)
		public NUnit.Framework.Constraints.InstanceOfTypeConstraint InstanceOf[T]()
		public NUnit.Framework.Constraints.LessThanConstraint LessThan(System.Object)
		public NUnit.Framework.Constraints.LessThanOrEqualConstraint AtMost(System.Object)
		public NUnit.Framework.Constraints.LessThanOrEqualConstraint LessThanOrEqualTo(System.Object)
		public NUnit.Framework.Constraints.RangeConstraint`1[T] InRange[T](T, T)
		public NUnit.Framework.Constraints.RegexConstraint StringMatching(System.String)
		public NUnit.Framework.Constraints.SameAsConstraint SameAs(System.Object)
		public NUnit.Framework.Constraints.SamePathConstraint SamePath(System.String)
		public NUnit.Framework.Constraints.SamePathOrUnderConstraint SamePathOrUnder(System.String)
		public NUnit.Framework.Constraints.StartsWithConstraint StringStarting(System.String)
		public NUnit.Framework.Constraints.SubPathConstraint SubPath(System.String)
		public NUnit.Framework.Constraints.SubstringConstraint StringContaining(System.String)
		public System.String SystemObject.ToString()

	public class NUnit.Framework.Iz
	INHERITS:
		NUnit.Framework.Is
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()

	public class NUnit.Framework.List
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.ListMapper Map(System.Collections.ICollection)
		public System.String SystemObject.ToString()

	public class NUnit.Framework.ListMapper
	CONSTRUCTORS:
		public Void .ctor(System.Collections.ICollection)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.Collections.ICollection Property(System.String)
		public System.String SystemObject.ToString()

	[System.AttributeUsageAttribute]
	public sealed class NUnit.Framework.MaxTimeAttribute
	INHERITS:
		NUnit.Framework.PropertyAttribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor(Int32)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Collections.IDictionary Properties { public get; }
		System.Object TypeId { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.PairwiseAttribute
	INHERITS:
		NUnit.Framework.PropertyAttribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Collections.IDictionary Properties { public get; }
		System.Object TypeId { public get; }

	[System.AttributeUsageAttribute]
	public abstract class NUnit.Framework.ParameterDataAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.Collections.IEnumerable GetData(System.Reflection.ParameterInfo)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.PlatformAttribute
	INHERITS:
		NUnit.Framework.IncludeExcludeAttribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
		public Void .ctor(System.String)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }
		System.String Exclude { public get; public set; }
		System.String Include { public get; public set; }
		System.String Reason { public get; public set; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.PropertyAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor(System.String, Double)
		public Void .ctor(System.String, Int32)
		public Void .ctor(System.String, System.String)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Collections.IDictionary Properties { public get; }
		System.Object TypeId { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.RandomAttribute
	INHERITS:
		NUnit.Framework.ValuesAttribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor(Double, Double, Int32)
		public Void .ctor(Int32)
		public Void .ctor(Int32, Int32, Int32)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.Collections.IEnumerable GetData(System.Reflection.ParameterInfo)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }

	public class NUnit.Framework.Randomizer
	INHERITS:
		System.Random
	CONSTRUCTORS:
		public Void .ctor()
		public Void .ctor(Int32)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Double SystemRandom.NextDouble()
		public Double[] GetDoubles(Double, Double, Int32)
		public Double[] GetDoubles(Int32)
		public Int32 SystemObject.GetHashCode()
		public Int32 SystemRandom.Next()
		public Int32 SystemRandom.Next(Int32)
		public Int32 SystemRandom.Next(Int32, Int32)
		public Int32[] GetInts(Int32, Int32, Int32)
		public NUnit.Framework.Randomizer GetRandomizer(System.Reflection.MemberInfo)
		public NUnit.Framework.Randomizer GetRandomizer(System.Reflection.ParameterInfo)
		public System.String SystemObject.ToString()
		public Void SystemRandom.NextBytes(Byte[])

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.RangeAttribute
	INHERITS:
		NUnit.Framework.ValuesAttribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor(Double, Double, Double)
		public Void .ctor(Int32, Int32)
		public Void .ctor(Int32, Int32, Int32)
		public Void .ctor(Int64, Int64, Int64)
		public Void .ctor(Single, Single, Single)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.Collections.IEnumerable NUnit.FrameworkValuesAttribute.GetData(System.Reflection.ParameterInfo)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.RepeatAttribute
	INHERITS:
		NUnit.Framework.PropertyAttribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor(Int32)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Collections.IDictionary Properties { public get; }
		System.Object TypeId { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.RequiredAddinAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor(System.String)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }
		System.String RequiredAddin { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.RequiresMTAAttribute
	INHERITS:
		NUnit.Framework.PropertyAttribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Collections.IDictionary Properties { public get; }
		System.Object TypeId { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.RequiresSTAAttribute
	INHERITS:
		NUnit.Framework.PropertyAttribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Collections.IDictionary Properties { public get; }
		System.Object TypeId { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.RequiresThreadAttribute
	INHERITS:
		NUnit.Framework.PropertyAttribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
		public Void .ctor(System.Threading.ApartmentState)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Collections.IDictionary Properties { public get; }
		System.Object TypeId { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.SequentialAttribute
	INHERITS:
		NUnit.Framework.PropertyAttribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Collections.IDictionary Properties { public get; }
		System.Object TypeId { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.SetCultureAttribute
	INHERITS:
		NUnit.Framework.PropertyAttribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor(System.String)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Collections.IDictionary Properties { public get; }
		System.Object TypeId { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.SetUICultureAttribute
	INHERITS:
		NUnit.Framework.PropertyAttribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor(System.String)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Collections.IDictionary Properties { public get; }
		System.Object TypeId { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.SetUpAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.SetUpFixtureAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }

	public class NUnit.Framework.StringAssert
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.ComponentModel.EditorBrowsableAttribute]
		public Boolean Equals(System.Object, System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()
		public Void AreEqualIgnoringCase(System.String, System.String)
		public Void AreEqualIgnoringCase(System.String, System.String, System.String)
		public Void AreEqualIgnoringCase(System.String, System.String, System.String, System.Object[])
		public Void AreNotEqualIgnoringCase(System.String, System.String)
		public Void AreNotEqualIgnoringCase(System.String, System.String, System.String)
		public Void AreNotEqualIgnoringCase(System.String, System.String, System.String, System.Object[])
		public Void Contains(System.String, System.String)
		public Void Contains(System.String, System.String, System.String)
		public Void Contains(System.String, System.String, System.String, System.Object[])
		public Void DoesNotContain(System.String, System.String)
		public Void DoesNotContain(System.String, System.String, System.String)
		public Void DoesNotContain(System.String, System.String, System.String, System.Object[])
		public Void DoesNotEndWith(System.String, System.String)
		public Void DoesNotEndWith(System.String, System.String, System.String)
		public Void DoesNotEndWith(System.String, System.String, System.String, System.Object[])
		public Void DoesNotMatch(System.String, System.String)
		public Void DoesNotMatch(System.String, System.String, System.String)
		public Void DoesNotMatch(System.String, System.String, System.String, System.Object[])
		public Void DoesNotStartWith(System.String, System.String)
		public Void DoesNotStartWith(System.String, System.String, System.String)
		public Void DoesNotStartWith(System.String, System.String, System.String, System.Object[])
		public Void EndsWith(System.String, System.String)
		public Void EndsWith(System.String, System.String, System.String)
		public Void EndsWith(System.String, System.String, System.String, System.Object[])
		public Void IsMatch(System.String, System.String)
		public Void IsMatch(System.String, System.String, System.String)
		public Void IsMatch(System.String, System.String, System.String, System.Object[])
		public Void ReferenceEquals(System.Object, System.Object)
		public Void StartsWith(System.String, System.String)
		public Void StartsWith(System.String, System.String, System.String)
		public Void StartsWith(System.String, System.String, System.String, System.Object[])

	[System.SerializableAttribute]
	public class NUnit.Framework.SuccessException
	INHERITS:
		System.Exception
	IMPLEMENTS:
		System.Runtime.Serialization.ISerializable
		System.Runtime.InteropServices._Exception
	CONSTRUCTORS:
		public Void .ctor(System.String)
		public Void .ctor(System.String, System.Exception)
	METHODS:
		[System.Security.SecurityCriticalAttribute]
		public Void SystemException.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.Exception SystemException.GetBaseException()
		public System.String SystemException.ToString()
		public System.Type SystemException.GetType()
	PROPERTIES:
		Int32 HResult { public get; }
		System.Collections.IDictionary Data { public get; }
		System.Exception InnerException { public get; }
		System.Reflection.MethodBase TargetSite { public get; }
		System.String HelpLink { public get; public set; }
		System.String Message { public get; }
		System.String Source { public get; public set; }
		System.String StackTrace { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.SuiteAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.TearDownAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }

	[System.AttributeUsageAttribute]
	public abstract class NUnit.Framework.TestActionAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
		NUnit.Framework.ITestAction
	CONSTRUCTORS:
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
		public Void AfterTest(NUnit.Framework.TestDetails)
		public Void BeforeTest(NUnit.Framework.TestDetails)
	PROPERTIES:
		NUnit.Framework.ActionTargets Targets { public get; }
		System.Object TypeId { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.TestAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }
		System.String Description { public get; public set; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.TestCaseAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
		NUnit.Framework.ITestCaseData
	CONSTRUCTORS:
		public Void .ctor(System.Object)
		public Void .ctor(System.Object, System.Object)
		public Void .ctor(System.Object, System.Object, System.Object)
		public Void .ctor(System.Object[])
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		Boolean Explicit { public get; public set; }
		Boolean HasExpectedResult { public get; }
		Boolean Ignore { public get; public set; }
		Boolean Ignored { public get; public set; }
		NUnit.Framework.MessageMatch MatchType { public get; public set; }
		System.Collections.IList Categories { public get; }
		System.Object ExpectedResult { public get; public set; }
		System.Object Result { public get; public set; }
		System.Object TypeId { public get; }
		System.Object[] Arguments { public get; }
		System.String Category { public get; public set; }
		System.String Description { public get; public set; }
		System.String ExpectedExceptionName { public get; public set; }
		System.String ExpectedMessage { public get; public set; }
		System.String IgnoreReason { public get; public set; }
		System.String Reason { public get; public set; }
		System.String TestName { public get; public set; }
		System.Type ExpectedException { public get; public set; }

	public class NUnit.Framework.TestCaseData
	IMPLEMENTS:
		NUnit.Framework.ITestCaseData
	CONSTRUCTORS:
		public Void .ctor(System.Object)
		public Void .ctor(System.Object, System.Object)
		public Void .ctor(System.Object, System.Object, System.Object)
		public Void .ctor(System.Object[])
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.TestCaseData Ignore()
		public NUnit.Framework.TestCaseData Ignore(System.String)
		public NUnit.Framework.TestCaseData MakeExplicit()
		public NUnit.Framework.TestCaseData MakeExplicit(System.String)
		public NUnit.Framework.TestCaseData Returns(System.Object)
		public NUnit.Framework.TestCaseData SetCategory(System.String)
		public NUnit.Framework.TestCaseData SetDescription(System.String)
		public NUnit.Framework.TestCaseData SetName(System.String)
		public NUnit.Framework.TestCaseData SetProperty(System.String, Double)
		public NUnit.Framework.TestCaseData SetProperty(System.String, Int32)
		public NUnit.Framework.TestCaseData SetProperty(System.String, System.String)
		public NUnit.Framework.TestCaseData Throws(System.String)
		public NUnit.Framework.TestCaseData Throws(System.Type)
		public System.String SystemObject.ToString()
	PROPERTIES:
		Boolean Explicit { public get; }
		Boolean HasExpectedResult { public get; }
		Boolean Ignored { public get; }
		System.Collections.IDictionary Properties { public get; }
		System.Collections.IList Categories { public get; }
		System.Object Result { public get; }
		System.Object[] Arguments { public get; }
		System.String Description { public get; }
		System.String ExpectedExceptionName { public get; }
		System.String IgnoreReason { public get; }
		System.String TestName { public get; }
		System.Type ExpectedException { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.TestCaseSourceAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor(System.String)
		public Void .ctor(System.Type)
		public Void .ctor(System.Type, System.String)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }
		System.String Category { public get; public set; }
		System.String SourceName { public get; }
		System.Type SourceType { public get; }

	public class NUnit.Framework.TestContext
	CONSTRUCTORS:
		public Void .ctor(System.Collections.IDictionary)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()
	PROPERTIES:
		ResultAdapter Result { public get; }
		System.String TestDirectory { public get; }
		System.String WorkDirectory { public get; }
		TestAdapter Test { public get; }

	public class NUnit.Framework.TestContext+ResultAdapter
	CONSTRUCTORS:
		public Void .ctor(System.Collections.IDictionary)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()
	PROPERTIES:
		NUnit.Framework.TestState State { public get; }
		NUnit.Framework.TestStatus Status { public get; }

	public class NUnit.Framework.TestContext+TestAdapter
	CONSTRUCTORS:
		public Void .ctor(System.Collections.IDictionary)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Collections.IDictionary Properties { public get; }
		System.String FullName { public get; }
		System.String Name { public get; }

	public sealed class NUnit.Framework.TestDelegate
	INHERITS:
		System.MulticastDelegate
	IMPLEMENTS:
		System.ICloneable
		System.Runtime.Serialization.ISerializable
	CONSTRUCTORS:
		public Void .ctor(System.Object, IntPtr)
	METHODS:
		[System.Security.SecurityCriticalAttribute]
		public Void SystemMulticastDelegate.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemMulticastDelegate.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemMulticastDelegate.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Delegate[] SystemMulticastDelegate.GetInvocationList()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public System.IAsyncResult BeginInvoke(System.AsyncCallback, System.Object)
		public System.Object SystemDelegate.Clone()
		public System.Object SystemDelegate.DynamicInvoke(System.Object[])
		public System.String SystemObject.ToString()
		public Void EndInvoke(System.IAsyncResult)
		public Void Invoke()
	PROPERTIES:
		System.Object Target { public get; }
		System.Reflection.MethodInfo Method { public get; }

	public class NUnit.Framework.TestDetails
	CONSTRUCTORS:
		public Void .ctor(System.Object, System.Reflection.MethodInfo, System.String, System.String, Boolean)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public System.String SystemObject.ToString()
	PROPERTIES:
		Boolean IsSuite { public get; }
		System.Object Fixture { public get; }
		System.Reflection.MethodInfo Method { public get; }
		System.String FullName { public get; }
		System.String Type { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.TestFixtureAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
		public Void .ctor(System.Object[])
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		Boolean Ignore { public get; public set; }
		System.Collections.IList Categories { public get; }
		System.Object TypeId { public get; }
		System.Object[] Arguments { public get; }
		System.String Category { public get; public set; }
		System.String Description { public get; public set; }
		System.String IgnoreReason { public get; public set; }
		System.Type[] TypeArgs { public get; public set; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.TestFixtureSetUpAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.TestFixtureTearDownAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }

	[System.ObsoleteAttribute]
	public class NUnit.Framework.Text
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.ObsoleteAttribute]
		public NUnit.Framework.Constraints.EndsWithConstraint EndsWith(System.String)
		[System.ObsoleteAttribute]
		public NUnit.Framework.Constraints.RegexConstraint DoesNotMatch(System.String)
		[System.ObsoleteAttribute]
		public NUnit.Framework.Constraints.RegexConstraint Matches(System.String)
		[System.ObsoleteAttribute]
		public NUnit.Framework.Constraints.StartsWithConstraint StartsWith(System.String)
		[System.ObsoleteAttribute]
		public NUnit.Framework.Constraints.SubstringConstraint Contains(System.String)
		[System.ObsoleteAttribute]
		public NUnit.Framework.Constraints.SubstringConstraint DoesNotContain(System.String)
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.EndsWithConstraint DoesNotEndWith(System.String)
		public NUnit.Framework.Constraints.StartsWithConstraint DoesNotStartWith(System.String)
		public System.String SystemObject.ToString()

	public class NUnit.Framework.TextMessageWriter
	INHERITS:
		NUnit.Framework.Constraints.MessageWriter
	IMPLEMENTS:
		System.IDisposable
	CONSTRUCTORS:
		public Void .ctor()
		public Void .ctor(System.String, System.Object[])
	METHODS:
		[System.Security.SecurityCriticalAttribute]
		public System.Object SystemMarshalByRefObject.GetLifetimeService()
		[System.Security.SecurityCriticalAttribute]
		public System.Object SystemMarshalByRefObject.InitializeLifetimeService()
		[System.Security.SecurityCriticalAttribute]
		public System.Runtime.Remoting.ObjRef SystemMarshalByRefObject.CreateObjRef(System.Type)
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public Void DisplayDifferences(NUnit.Framework.Constraints.Constraint)
		public Void DisplayDifferences(System.Object, System.Object)
		public Void DisplayDifferences(System.Object, System.Object, NUnit.Framework.Constraints.Tolerance)
		public Void DisplayStringDifferences(System.String, System.String, Int32, Boolean, Boolean)
		public Void NUnit.Framework.ConstraintsMessageWriter.WriteMessageLine(System.String, System.Object[])
		public Void WriteActualValue(System.Object)
		public Void WriteCollectionElements(System.Collections.IEnumerable, Int32, Int32)
		public Void WriteConnector(System.String)
		public Void WriteExpectedValue(System.Object)
		public Void WriteMessageLine(Int32, System.String, System.Object[])
		public Void WriteModifier(System.String)
		public Void WritePredicate(System.String)
		public Void WriteValue(System.Object)
	PROPERTIES:
		Int32 MaxLineLength { public get; public set; }
		System.IFormatProvider FormatProvider { public get; }
		System.String NewLine { public get; public set; }
		System.Text.Encoding Encoding { public get; }
	FIELDS:
		public Int32 PrefixLength
		public System.String Pfx_Actual
		public System.String Pfx_Expected

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.TheoryAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }

	public class NUnit.Framework.Throws
	CONSTRUCTORS:
		public Void .ctor()
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemObject.Equals(System.Object)
		public Int32 SystemObject.GetHashCode()
		public NUnit.Framework.Constraints.ExactTypeConstraint TypeOf(System.Type)
		public NUnit.Framework.Constraints.ExactTypeConstraint TypeOf[T]()
		public NUnit.Framework.Constraints.InstanceOfTypeConstraint InstanceOf(System.Type)
		public NUnit.Framework.Constraints.InstanceOfTypeConstraint InstanceOf[T]()
		public System.String SystemObject.ToString()

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.TimeoutAttribute
	INHERITS:
		NUnit.Framework.PropertyAttribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor(Int32)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Collections.IDictionary Properties { public get; }
		System.Object TypeId { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.ValuesAttribute
	INHERITS:
		NUnit.Framework.ParameterDataAttribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor(System.Object)
		public Void .ctor(System.Object, System.Object)
		public Void .ctor(System.Object, System.Object, System.Object)
		public Void .ctor(System.Object[])
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.Collections.IEnumerable GetData(System.Reflection.ParameterInfo)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }

	[System.AttributeUsageAttribute]
	public class NUnit.Framework.ValueSourceAttribute
	INHERITS:
		System.Attribute
	IMPLEMENTS:
		System.Runtime.InteropServices._Attribute
	CONSTRUCTORS:
		public Void .ctor(System.String)
		public Void .ctor(System.Type, System.String)
	METHODS:
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemAttribute.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemAttribute.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public Boolean SystemAttribute.IsDefaultAttribute()
		public Boolean SystemAttribute.Match(System.Object)
		public System.String SystemObject.ToString()
	PROPERTIES:
		System.Object TypeId { public get; }
		System.String SourceName { public get; }
		System.Type SourceType { public get; }

INTERFACES: 
	public interface NUnit.Framework.Constraints.IResolveConstraint
	METHODS:
		public NUnit.Framework.Constraints.Constraint Resolve()

	public interface NUnit.Framework.IExpectException
	METHODS:
		public Void HandleException(System.Exception)

	public interface NUnit.Framework.INUnitEqualityComparer
	METHODS:
		public Boolean AreEqual(System.Object, System.Object, NUnit.Framework.Constraints.Tolerance ByRef)

	public interface NUnit.Framework.INUnitEqualityComparer`1
	METHODS:
		public Boolean AreEqual(T, T, NUnit.Framework.Constraints.Tolerance ByRef)

	public interface NUnit.Framework.ITestAction
	METHODS:
		public Void AfterTest(NUnit.Framework.TestDetails)
		public Void BeforeTest(NUnit.Framework.TestDetails)
	PROPERTIES:
		NUnit.Framework.ActionTargets Targets { public get; }

	public interface NUnit.Framework.ITestCaseData
	PROPERTIES:
		Boolean Explicit { public get; }
		Boolean HasExpectedResult { public get; }
		Boolean Ignored { public get; }
		System.Object Result { public get; }
		System.Object[] Arguments { public get; }
		System.String Description { public get; }
		System.String ExpectedExceptionName { public get; }
		System.String IgnoreReason { public get; }
		System.String TestName { public get; }
		System.Type ExpectedException { public get; }

ENUMS: 
	[System.FlagsAttribute]
	public enum NUnit.Framework.ActionTargets
	IMPLEMENTS:
		System.IComparable
		System.IFormattable
		System.IConvertible
	METHODS:
		[System.ObsoleteAttribute]
		public System.String SystemEnum.ToString(System.IFormatProvider)
		[System.ObsoleteAttribute]
		public System.String SystemEnum.ToString(System.String, System.IFormatProvider)
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemEnum.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemEnum.HasFlag(System.Enum)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemEnum.CompareTo(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemEnum.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public System.String SystemEnum.ToString()
		public System.String SystemEnum.ToString(System.String)
		public System.TypeCode SystemEnum.GetTypeCode()
	FIELDS:
		public NUnit.Framework.ActionTargets Default
		public NUnit.Framework.ActionTargets Suite
		public NUnit.Framework.ActionTargets Test

	public enum NUnit.Framework.Constraints.ToleranceMode
	IMPLEMENTS:
		System.IComparable
		System.IFormattable
		System.IConvertible
	METHODS:
		[System.ObsoleteAttribute]
		public System.String SystemEnum.ToString(System.IFormatProvider)
		[System.ObsoleteAttribute]
		public System.String SystemEnum.ToString(System.String, System.IFormatProvider)
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemEnum.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemEnum.HasFlag(System.Enum)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemEnum.CompareTo(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemEnum.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public System.String SystemEnum.ToString()
		public System.String SystemEnum.ToString(System.String)
		public System.TypeCode SystemEnum.GetTypeCode()
	FIELDS:
		public NUnit.Framework.Constraints.ToleranceMode Linear
		public NUnit.Framework.Constraints.ToleranceMode None
		public NUnit.Framework.Constraints.ToleranceMode Percent
		public NUnit.Framework.Constraints.ToleranceMode Ulps

	public enum NUnit.Framework.MessageMatch
	IMPLEMENTS:
		System.IComparable
		System.IFormattable
		System.IConvertible
	METHODS:
		[System.ObsoleteAttribute]
		public System.String SystemEnum.ToString(System.IFormatProvider)
		[System.ObsoleteAttribute]
		public System.String SystemEnum.ToString(System.String, System.IFormatProvider)
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemEnum.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemEnum.HasFlag(System.Enum)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemEnum.CompareTo(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemEnum.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public System.String SystemEnum.ToString()
		public System.String SystemEnum.ToString(System.String)
		public System.TypeCode SystemEnum.GetTypeCode()
	FIELDS:
		public NUnit.Framework.MessageMatch Contains
		public NUnit.Framework.MessageMatch Exact
		public NUnit.Framework.MessageMatch Regex
		public NUnit.Framework.MessageMatch StartsWith

	public enum NUnit.Framework.SpecialValue
	IMPLEMENTS:
		System.IComparable
		System.IFormattable
		System.IConvertible
	METHODS:
		[System.ObsoleteAttribute]
		public System.String SystemEnum.ToString(System.IFormatProvider)
		[System.ObsoleteAttribute]
		public System.String SystemEnum.ToString(System.String, System.IFormatProvider)
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemEnum.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemEnum.HasFlag(System.Enum)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemEnum.CompareTo(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemEnum.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public System.String SystemEnum.ToString()
		public System.String SystemEnum.ToString(System.String)
		public System.TypeCode SystemEnum.GetTypeCode()
	FIELDS:
		public NUnit.Framework.SpecialValue Null

	public enum NUnit.Framework.TestState
	IMPLEMENTS:
		System.IComparable
		System.IFormattable
		System.IConvertible
	METHODS:
		[System.ObsoleteAttribute]
		public System.String SystemEnum.ToString(System.IFormatProvider)
		[System.ObsoleteAttribute]
		public System.String SystemEnum.ToString(System.String, System.IFormatProvider)
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemEnum.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemEnum.HasFlag(System.Enum)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemEnum.CompareTo(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemEnum.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public System.String SystemEnum.ToString()
		public System.String SystemEnum.ToString(System.String)
		public System.TypeCode SystemEnum.GetTypeCode()
	FIELDS:
		public NUnit.Framework.TestState Cancelled
		public NUnit.Framework.TestState Error
		public NUnit.Framework.TestState Failure
		public NUnit.Framework.TestState Ignored
		public NUnit.Framework.TestState Inconclusive
		public NUnit.Framework.TestState NotRunnable
		public NUnit.Framework.TestState Skipped
		public NUnit.Framework.TestState Success

	public enum NUnit.Framework.TestStatus
	IMPLEMENTS:
		System.IComparable
		System.IFormattable
		System.IConvertible
	METHODS:
		[System.ObsoleteAttribute]
		public System.String SystemEnum.ToString(System.IFormatProvider)
		[System.ObsoleteAttribute]
		public System.String SystemEnum.ToString(System.String, System.IFormatProvider)
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemEnum.Equals(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Boolean SystemEnum.HasFlag(System.Enum)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemEnum.CompareTo(System.Object)
		[System.Security.SecuritySafeCriticalAttribute]
		public Int32 SystemEnum.GetHashCode()
		[System.Security.SecuritySafeCriticalAttribute]
		public System.Type SystemObject.GetType()
		public System.String SystemEnum.ToString()
		public System.String SystemEnum.ToString(System.String)
		public System.TypeCode SystemEnum.GetTypeCode()
	FIELDS:
		public NUnit.Framework.TestStatus Failed
		public NUnit.Framework.TestStatus Inconclusive
		public NUnit.Framework.TestStatus Passed
		public NUnit.Framework.TestStatus Skipped

STRUCTS: 
